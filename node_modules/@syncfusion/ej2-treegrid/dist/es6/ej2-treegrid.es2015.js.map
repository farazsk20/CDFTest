{"version":3,"file":"ej2-treegrid.es2015.js","sources":["../src/es6/treegrid/models/column.js","../src/es6/treegrid/models/filter-settings.js","../src/es6/treegrid/actions/column-menu.js","../src/es6/treegrid/base/constant.js","../src/es6/treegrid/actions/print.js","../src/es6/treegrid/models/search-settings.js","../src/es6/treegrid/models/selection-settings.js","../src/es6/treegrid/utils.js","../src/es6/treegrid/renderer/render.js","../src/es6/treegrid/actions/sort.js","../src/es6/treegrid/base/data.js","../src/es6/treegrid/enum.js","../src/es6/treegrid/models/page-settings.js","../src/es6/treegrid/models/summary.js","../src/es6/treegrid/models/edit-settings.js","../src/es6/treegrid/models/sort-settings.js","../src/es6/treegrid/base/treegrid.js","../src/es6/treegrid/actions/reorder.js","../src/es6/treegrid/actions/resize.js","../src/es6/treegrid/base/index.js","../src/es6/treegrid/models/index.js","../src/es6/treegrid/renderer/index.js","../src/es6/treegrid/actions/filter.js","../src/es6/treegrid/actions/excel-export.js","../src/es6/treegrid/actions/pdf-export.js","../src/es6/treegrid/actions/page.js","../src/es6/treegrid/actions/toolbar.js","../src/es6/treegrid/actions/summary.js","../src/es6/treegrid/actions/context-menu.js","../src/es6/treegrid/actions/edit.js","../src/es6/treegrid/actions/command-column.js","../src/es6/treegrid/actions/index.js","../src/es6/treegrid/index.js","../src/es6/index.js"],"sourcesContent":["import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nexport class Column {\n    constructor(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nexport class FilterSettings extends ChildProperty {\n}\n__decorate([\n    Collection([], Predicate)\n], FilterSettings.prototype, \"columns\", void 0);\n__decorate([\n    Property('FilterBar')\n], FilterSettings.prototype, \"type\", void 0);\n__decorate([\n    Property()\n], FilterSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property(true)\n], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n__decorate([\n    Property(1500)\n], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n__decorate([\n    Property()\n], FilterSettings.prototype, \"operators\", void 0);\n__decorate([\n    Property(false)\n], FilterSettings.prototype, \"ignoreAccent\", void 0);\n__decorate([\n    Property('Parent')\n], FilterSettings.prototype, \"hierarchyMode\", void 0);\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nexport class ColumnMenu {\n    /**\n     * Constructor for render module\n     */\n    constructor(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    getColumnMenu() {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    }\n    destroy() {\n        //this.parent.grid.columnMenuModule.destroy();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'columnMenu';\n    }\n}\n","/**\n *  @hidden\n */\nexport const load = 'load';\n/** @hidden */\nexport const rowDataBound = 'rowDataBound';\n/** @hidden */\nexport const dataBound = 'dataBound';\n/** @hidden */\nexport const queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport const beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport const actionBegin = 'actionBegin';\n/** @hidden */\nexport const actionComplete = 'actionComplete';\n/** @hidden */\nexport const rowSelected = 'rowSelected';\n/** @hidden */\nexport const rowDeselected = 'rowDeselected';\n/** @hidden */\nexport const toolbarClick = 'toolbarClick';\n/** @hidden */\nexport const beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport const beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport const resizeStop = 'resizeStop';\n/** @hidden */\nexport const expanded = 'expanded';\n/** @hidden */\nexport const expanding = 'expanding';\n/** @hidden */\nexport const collapsed = 'collapsed';\n/** @hidden */\nexport const collapsing = 'collapsing';\n/** @hidden */\nexport const remoteExpand = 'remoteExpand';\n/** @hidden */\nexport const localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport const pagingActions = 'pagingActions';\n/** @hidden */\nexport const printGridInit = 'printGrid-Init';\n/** @hidden */\nexport const contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport const contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport const savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport const crudAction = 'crudAction';\n/** @hidden */\nexport const beginEdit = 'beginEdit';\n/** @hidden */\nexport const beginAdd = 'beginAdd';\n/** @hidden */\nexport const recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport const cellSave = 'cellSave';\n/** @hidden */\nexport const cellSaved = 'cellSaved';\n/** @hidden */\nexport const cellEdit = 'cellEdit';\n/** @hidden */\nexport const batchDelete = 'batchDelete';\n/** @hidden */\nexport const batchCancel = 'batchCancel';\n/** @hidden */\nexport const batchAdd = 'batchAdd';\n/** @hidden */\nexport const beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport const beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport const batchSave = 'batchSave';\n/** @hidden */\nexport const keyPressed = 'key-pressed';\n/** @hidden */\nexport const updateData = 'update-data';\n/** @hidden */\nexport const doubleTap = 'double-tap';\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nexport class Print {\n    /**\n     * Constructor for Print module\n     */\n    constructor(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'print';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    }\n    removeEventListener() {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    }\n    printTreeGrid(printGrid) {\n        let grid = getObject('printgrid', printGrid);\n        let gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    }\n    print() {\n        this.parent.grid.print();\n    }\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nexport class SearchSettings extends ChildProperty {\n}\n__decorate([\n    Property()\n], SearchSettings.prototype, \"fields\", void 0);\n__decorate([\n    Property(false)\n], SearchSettings.prototype, \"ignoreCase\", void 0);\n__decorate([\n    Property()\n], SearchSettings.prototype, \"operators\", void 0);\n__decorate([\n    Property()\n], SearchSettings.prototype, \"key\", void 0);\n__decorate([\n    Property()\n], SearchSettings.prototype, \"hierarchyMode\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nexport class SelectionSettings extends ChildProperty {\n}\n__decorate([\n    Property('Row')\n], SelectionSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property('Flow')\n], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n__decorate([\n    Property('Single')\n], SelectionSettings.prototype, \"type\", void 0);\n__decorate([\n    Property(false)\n], SelectionSettings.prototype, \"persistSelection\", void 0);\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        let adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    let datas;\n    datas = [];\n    let recordsLength = Object.keys(records).length;\n    for (let i = 0, len = recordsLength; i < len; i++) {\n        let hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    let parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter((e) => { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    let childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter((e) => { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    let datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    let childRecords = records.childRecords;\n    for (let i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = [...datas, ...findChildrenRecords(childRecords[i])];\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        let dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    let objArr = [];\n    let obj;\n    let keys;\n    for (let i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (let j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nexport class Render {\n    /**\n     * Constructor for render module\n     */\n    constructor(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    RowModifier(args) {\n        if (!args.data) {\n            return;\n        }\n        let data = args.data;\n        let parentData = data.parentItem;\n        let index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            let collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            let proxy = this.parent;\n            let parentrec = this.parent.getCurrentViewRecords().filter((rec) => {\n                return getValue(proxy.idMapping, rec) === getValue(proxy.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                let display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        let summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    }\n    /**\n     * cell renderer for tree column index cell\n     */\n    cellRender(args) {\n        if (!args.data) {\n            return;\n        }\n        let grid = this.parent.grid;\n        let data = args.data;\n        let ispadfilter = isNullOrUndefined(data.filterLevel);\n        let pad = ispadfilter ? data.level : data.filterLevel;\n        let totalIconsWidth = 0;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            let container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            let emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (let n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            let iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                let expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                let expand;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                let collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            let cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            let textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        let summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            let summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nexport class Sort {\n    constructor(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'sort';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    }\n    createSorting(data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    }\n    createSortRecords(data) {\n        let sortData = getObject('modifiedData', data);\n        let parentRecords = getObject('parentRecords', data);\n        let parentIndex = getObject('parentIndex', data);\n        let filteredResult = getObject('filteredResult', data);\n        let dataLength = Object.keys(sortData).length;\n        for (let i = 0, len = dataLength; i < len; i++) {\n            let currentSortData = sortData[i];\n            this.storedIndex++;\n            let level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                let parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    }\n    createdSortedRecords(sortingElements) {\n        let data = getObject('modifiedData', sortingElements);\n        let sortQuery = getObject('srtQry', sortingElements);\n        let parent = getObject('parent', sortingElements);\n        for (let i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                let sortedData;\n                let sortchildData;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    }\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    sortColumn(columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    }\n    removeSortColumn(field) {\n        this.parent.grid.removeSortColumn(field);\n    }\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    updateModel() {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    }\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    clearSorting() {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    }\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nexport class DataManipulation {\n    constructor(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    }\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /** @hidden */\n    isRemote() {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    }\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    convertToFlatData(data) {\n        this.parent.flatData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            let dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    let qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then((e) => {\n                        this.parentItems = DataUtil.distinct(e.result, this.parent.parentIdMapping, false);\n                        let req = getObject('dataSource.requests', this.parent).filter((e) => {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, this).parent;\n                            if (!isNullOrUndefined(this.zerothLevelData)) {\n                                setValue('cancel', false, this.zerothLevelData);\n                                getValue('grid.renderModule', this.parent).dataManagerSuccess(this.zerothLevelData);\n                                this.zerothLevelData = null;\n                            }\n                            this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (let i = 0; i < Object.keys(data).length; i++) {\n                let tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            let mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (let i = 0; i < mappingData.length; i++) {\n                let groupData = mappingData[i];\n                let index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        let childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData, index)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                                if (!isNullOrUndefined(this.hierarchyData[index][this.parent.parentIdMapping])) {\n                                    this.hierarchyData.splice(index, 1);\n                                    this.taskIds.splice(index, 1);\n                                }\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = [];\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    }\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    updateChildHierarchy(data, currentData, childData, index) {\n        let parentID = currentData[this.parent.parentIdMapping];\n        let returns = false;\n        let id = currentData[this.parent.idMapping];\n        for (let i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                let childs = data[i][this.parent.childMapping];\n                for (let j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        this.hierarchyData.splice(index, 1);\n                        this.taskIds.splice(index, 1);\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[i][this.parent.childMapping])) {\n                returns = this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData, index);\n            }\n        }\n        return returns;\n    }\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    updateParentRemoteData(args) {\n        let records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            for (let rec = 0; rec < records.length; rec++) {\n                if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                    && (isNullOrUndefined(records[rec].index))) {\n                    records[rec].level = 0;\n                    records[rec].index = Math.ceil(Math.random() * 1000);\n                    records[rec].hasChildRecords = true;\n                }\n            }\n        }\n        args.result = records;\n        this.parent.notify('updateResults', args);\n    }\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    collectExpandingRecs(rowDetails) {\n        let args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (let i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            let dm = this.parent.dataSource;\n            let qry = this.parent.grid.getDataModule().generateQuery();\n            let clonequries = qry.queries.filter((e) => e.fn !== 'onPage' && e.fn !== 'onWhere');\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then((e) => {\n                let datas = this.parent.grid.currentViewData;\n                let inx = datas.indexOf(rowDetails.record);\n                let haveChild = getObject('actual.nextLevel', e);\n                let result = e.result;\n                for (let r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][this.parent.hasChildMapping] || this.parentItems.indexOf(result[r][this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                this.parent.trigger(events.actionComplete, e);\n                hideSpinner(this.parent.element);\n                e.count = this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', this.parent).dataManagerSuccess(e);\n                this.parent.trigger(events.expanded, args);\n            });\n        }\n    }\n    beginSorting() {\n        this.isSortAction = true;\n    }\n    createRecords(data, parentRecords) {\n        for (let i = 0, len = Object.keys(data).length; i < len; i++) {\n            let currentData = data[i];\n            let level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                let parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    }\n    sortedRecords(data) {\n        let sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            let sortedData = getObject('sortedData', data);\n            let filteredData = getObject('filteredData', data);\n            for (let i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                for (let j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    let sortData = getObject('uniqueID', sortedData[i]);\n                    let filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (let i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    }\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    dataProcessor(args) {\n        let dataObj = this.parent.grid.dataSource;\n        let results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        let count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            let qry = new Query();\n            let gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            let fltrQuery = gridQuery.queries.filter((q) => q.fn === 'onWhere');\n            let srchQuery = gridQuery.queries.filter((q) => q.fn === 'onSearch');\n            qry.queries = fltrQuery.concat(srchQuery);\n            let filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                let query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                let summaryQuery = query.queries.filter((q) => q.fn === 'onAggregates');\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            let gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            let summaryQuery = gridQuery.queries.filter((q) => q.fn === 'onAggregates');\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            let parentData;\n            let action = 'action';\n            let collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                let sortedData;\n                let query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                let srtQry = new Query();\n                for (let srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    let col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                    let compFun = col.sortComparer && !this.isRemote() ?\n                        col.sortComparer.bind(col) :\n                        this.parent.grid.sortSettings.columns[srt].direction;\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n                }\n                let modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                let isSort = false;\n                let query = getObject('query', args);\n                let summaryQuery = query.queries.filter((q) => q.fn === 'onAggregates');\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    }\n    /**\n     * update for datasource\n     */\n    updateData(dataResult) {\n        this.dataResults = dataResult;\n    }\n}\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nexport class PageSettings extends ChildProperty {\n}\n__decorate([\n    Property(12)\n], PageSettings.prototype, \"pageSize\", void 0);\n__decorate([\n    Property(8)\n], PageSettings.prototype, \"pageCount\", void 0);\n__decorate([\n    Property(1)\n], PageSettings.prototype, \"currentPage\", void 0);\n__decorate([\n    Property()\n], PageSettings.prototype, \"totalRecordsCount\", void 0);\n__decorate([\n    Property(false)\n], PageSettings.prototype, \"enableQueryString\", void 0);\n__decorate([\n    Property(false)\n], PageSettings.prototype, \"pageSizes\", void 0);\n__decorate([\n    Property(null)\n], PageSettings.prototype, \"template\", void 0);\n__decorate([\n    Property('All')\n], PageSettings.prototype, \"pageSizeMode\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nexport class AggregateColumn extends ChildProperty {\n    constructor() {\n        super(...arguments);\n        this.intl = new Internationalization();\n        this.templateFn = {};\n    }\n    /**\n     * @hidden\n     */\n    setFormatter(cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    }\n    /**\n     * @hidden\n     */\n    getFormatFunction(format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    }\n    /**\n     * @hidden\n     */\n    getFormatter() {\n        return this.formatFn;\n    }\n    /**\n     * @hidden\n     */\n    setTemplate(helper = {}) {\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    }\n    /**\n     * @hidden\n     */\n    getTemplate(type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    }\n    /**\n     * @hidden\n     */\n    setPropertiesSilent(prop) {\n        this.setProperties(prop, true);\n    }\n}\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"type\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"footerTemplate\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"field\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"format\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"columnName\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"customAggregate\", void 0);\nexport class AggregateRow extends ChildProperty {\n}\n__decorate([\n    Collection([], AggregateColumn)\n], AggregateRow.prototype, \"columns\", void 0);\n__decorate([\n    Property(true)\n], AggregateRow.prototype, \"showChildSummary\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nexport class EditSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"allowAdding\", void 0);\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"allowEditing\", void 0);\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"allowDeleting\", void 0);\n__decorate([\n    Property('Cell')\n], EditSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property('Top')\n], EditSettings.prototype, \"newRowPosition\", void 0);\n__decorate([\n    Property(true)\n], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n__decorate([\n    Property(true)\n], EditSettings.prototype, \"showConfirmDialog\", void 0);\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n__decorate([\n    Property('')\n], EditSettings.prototype, \"template\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nexport class SortDescriptor extends ChildProperty {\n}\n__decorate([\n    Property()\n], SortDescriptor.prototype, \"field\", void 0);\n__decorate([\n    Property()\n], SortDescriptor.prototype, \"direction\", void 0);\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nexport class SortSettings extends ChildProperty {\n}\n__decorate([\n    Collection([], SortDescriptor)\n], SortSettings.prototype, \"columns\", void 0);\n__decorate([\n    Property(true)\n], SortSettings.prototype, \"allowUnsort\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nlet TreeGrid = class TreeGrid extends Component {\n    constructor(options, element) {\n        super(options, element);\n        this.dataResults = {};\n        this.grid = new Grid();\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    excelExport(excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    }\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    csvExport(excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    }\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    pdfExport(pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'treegrid';\n    }\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    preRender() {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    }\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    sortByColumn(columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    clearSorting() {\n        this.sortModule.clearSorting();\n    }\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    removeSortColumn(field) {\n        this.sortModule.removeSortColumn(field);\n    }\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    search(searchString) {\n        this.grid.search(searchString);\n    }\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    autoFitColumns(fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    }\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    reorderColumns(fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    }\n    TreeGridLocale() {\n        /* tslint:disable-next-line:no-any */\n        let locale = L10n.locale;\n        let localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        let gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        let treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    }\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    print() {\n        this.printModule.print();\n    }\n    treeGridkeyActionHandler(e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    let collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    let expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    let target = e.target.parentElement;\n                    let summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        let rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        let cellIndex = e.target.cellIndex;\n                        let row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    let targetRow = e.target.parentElement;\n                    let summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        let rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        let cIndex = e.target.cellIndex;\n                        let rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    }\n    // Get Proper Row Element from the summary \n    findnextRowElement(summaryRowElement) {\n        let rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    }\n    // Get Proper Row Element from the summary \n    findPreviousRowElement(summaryRowElement) {\n        let rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    }\n    initProperties() {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    }\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    wireEvents() {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    }\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    requiredModules() {\n        let modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    isCommandColumn(columns) {\n        return columns.some((col) => {\n            if (col.columns) {\n                return this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    }\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    unwireEvents() {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    }\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    render() {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        let gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    }\n    convertTreeData(data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    }\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    bindGridProperties() {\n        let edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n    }\n    triggerEvents(args) {\n        this.trigger(getObject('name', args), args);\n    }\n    bindGridEvents() {\n        let treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = (args) => {\n            this.selectedRowIndex = this.grid.selectedRowIndex;\n            this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = (args) => {\n            this.selectedRowIndex = this.grid.selectedRowIndex;\n            this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = (args) => {\n            this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = (args) => {\n            this.updateColumnModel();\n            this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = (args) => {\n            this.notify('excelCellInfo', args);\n            args = this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = (args) => {\n            this.notify('pdfCellInfo', args);\n            args = this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = (args) => {\n            this.updateColumnModel();\n            this.trigger(events.dataBound, args);\n            if (isRemoteData(this) && !isOffline(this) && !this.hasChildMapping) {\n                let req = getObject('dataSource.requests', this).filter((e) => {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), this);\n            }\n            this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                let dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    }\n    extendedGridEditEvents() {\n        this.grid.cellSave = (args) => {\n            this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = (args) => {\n            this.trigger(events.cellEdit, args);\n            this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = (args) => {\n            if (this.editSettings.mode !== 'Cell') {\n                this.trigger(events.batchCancel, args);\n            }\n            this.notify(events.batchCancel, args);\n        };\n    }\n    extendedGridEvents() {\n        let treeGrid = this;\n        this.grid.recordDoubleClick = (args) => {\n            this.trigger(events.recordDoubleClick, args);\n            this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = (args) => {\n            let requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(this) && !isNullOrUndefined(this.filterModule)\n                && (this.grid.filterSettings.columns.length === 0 || this.grid.searchSettings.key.length === 0)) {\n                this.notify('clearFilters', { flatData: this.grid.dataSource });\n                this.grid.dataSource = this.dataResults.result;\n            }\n            this.trigger(events.actionBegin, args);\n            this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = (args) => {\n            this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                this.notify('setColumnIndex', {});\n            }\n            if (this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (this.editSettings.newRowPosition !== 'Top' && this.editSettings.newRowPosition !== 'Bottom')) {\n                    this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    this.notify(events.batchSave, args);\n                }\n            }\n            this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = (args) => {\n            this.notify(events.contextMenuClick, args);\n            this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = (args) => {\n            this.notify(events.contextMenuOpen, args);\n            this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = (args) => {\n            this.renderModule.cellRender(args);\n        };\n    }\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    loadGrid() {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    }\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    autoGenerateColumns() {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            let record;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            let keys = Object.keys(record);\n            for (let i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    }\n    getGridEditSettings() {\n        let edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    }\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    getContextMenu() {\n        if (this.contextMenuItems) {\n            let items = [];\n            for (let i = 0; i < this.contextMenuItems.length; i++) {\n                let item;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    getGridToolbar() {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            let items = [];\n            for (let i = 0; i < this.toolbar.length; i++) {\n                let item;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        let tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        let tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    getGridColumns() {\n        let column = this.columns;\n        this.columnModel = [];\n        let treeGridColumn;\n        let gridColumn;\n        let gridColumnCollection = [];\n        for (let i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (let prop of Object.keys(column[i])) {\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    }\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    onPropertyChanged(newProp, oldProp) {\n        let properties = Object.keys(newProp);\n        let requireRefresh = false;\n        for (let prop of properties) {\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns();\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData.slice();\n                    }\n                    else {\n                        this.grid.dataSource = this.dataSource;\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    }\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeListener();\n        this.unwireEvents();\n        super.destroy();\n        this.grid.destroy();\n        this.dataModule.destroy();\n        let modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (let i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    }\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    dataBind() {\n        super.dataBind();\n        this.grid.dataBind();\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    getPersistData() {\n        let keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        let ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        let ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach((value) => {\n            let currentObject = this[value];\n            for (let val of ignoreOnPersist[value]) {\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    }\n    ignoreInArrays(ignoreOnColumn, columns) {\n        columns.forEach((column) => {\n            if (column.columns) {\n                this.ignoreInColumn(ignoreOnColumn, column);\n                this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    }\n    ignoreInColumn(ignoreOnColumn, column) {\n        ignoreOnColumn.forEach((val) => {\n            delete column[val];\n            column.filter = {};\n        });\n    }\n    mouseClickHandler(e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        let target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    }\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    getRows() {\n        return this.grid.getRows();\n    }\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    getPager() {\n        return this.grid.getPager(); //get element from pager\n    }\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    addRecord(data, index) {\n        this.grid.editModule.addRecord(data, index);\n    }\n    /**\n     * Cancels edited state.\n     */\n    closeEdit() {\n        this.grid.editModule.closeEdit();\n    }\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    deleteRecord(fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    }\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    startEdit() {\n        this.grid.editModule.startEdit();\n    }\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    endEdit() {\n        this.grid.editModule.endEdit();\n    }\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    deleteRow(tr) {\n        this.grid.editModule.deleteRow(tr);\n    }\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    getPrimaryKeyFieldNames() {\n        return this.grid.getPrimaryKeyFieldNames();\n    }\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    setCellValue(key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    }\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    setRowData(key, rowData) {\n        this.grid.setRowData(key, rowData);\n    }\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    goToPage(pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    }\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    getCellFromIndex(rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    }\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    getColumnByField(field) {\n        return iterateArrayOrObject(this.columnModel, (item, index) => {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    }\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    getColumnByUid(uid) {\n        return iterateArrayOrObject(this.columnModel, (item, index) => {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    }\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    getColumnFieldNames() {\n        return this.grid.getColumnFieldNames();\n    }\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    getFooterContent() {\n        return this.grid.getFooterContent();\n    }\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    getFooterContentTable() {\n        return this.grid.getFooterContentTable();\n    }\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    showColumns(keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    }\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    hideColumns(keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    }\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    getColumnHeaderByField(field) {\n        return this.grid.getColumnHeaderByField(field);\n    }\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    getColumnHeaderByIndex(index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    }\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    getColumnHeaderByUid(uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    }\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    getColumnIndexByField(field) {\n        return this.grid.getColumnIndexByField(field);\n    }\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    getColumnIndexByUid(uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    }\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    getColumns(isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    }\n    updateColumnModel(column) {\n        let gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        let gridColumn;\n        this.columnModel = [];\n        for (let i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (let prop of Object.keys(gridColumns[i])) {\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    }\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    getContent() {\n        return this.grid.getContent();\n    }\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    getContentTable() {\n        return this.grid.getContentTable();\n    }\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    getDataRows() {\n        let dRows = [];\n        let rows = this.grid.getDataRows();\n        for (let i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    }\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    getCurrentViewRecords() {\n        return this.grid.currentViewData;\n    }\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    getHeaderContent() {\n        return this.grid.getHeaderContent();\n    }\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    getHeaderTable() {\n        return this.grid.getHeaderTable();\n    }\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    getRowByIndex(index) {\n        return this.grid.getRowByIndex(index);\n    }\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    getRowInfo(target) {\n        return this.grid.getRowInfo(target);\n    }\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    getUidByColumnField(field) {\n        return this.grid.getUidByColumnField(field);\n    }\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    getVisibleColumns() {\n        let cols = [];\n        for (let col of this.columnModel) {\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    }\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    showSpinner() {\n        showSpinner(this.element);\n    }\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    hideSpinner() {\n        hideSpinner(this.element);\n    }\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    refresh() {\n        this.grid.refresh();\n    }\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    refreshColumns() {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    }\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    refreshHeader() {\n        this.grid.refreshHeader();\n    }\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    expandCollapseRequest(target) {\n        let rowInfo = this.grid.getRowInfo(target);\n        let record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    }\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    expandRow(row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        let args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            let collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    }\n    getCollapseExpandRecords(row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter((e) => {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    }\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    collapseRow(row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        let args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        let collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    }\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    expandAtLevel(level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            let rec = this.flatData.filter((e) => {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            let rec = this.getRecordDetails(level);\n            let row = getObject('rows', rec);\n            let record = getObject('records', rec);\n            for (let i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    }\n    getRecordDetails(level) {\n        let rows = this.getRows().filter((e) => {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        let records = this.getCurrentViewRecords().filter((e) => { return e.level === level && e.hasChildRecords; });\n        let obj = { records: records, rows: rows };\n        return obj;\n    }\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    collapseAtLevel(level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            let rec = this.flatData.filter((e) => {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            let rec = this.getRecordDetails(level);\n            let rows = getObject('rows', rec);\n            let records = getObject('records', rec);\n            for (let i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    }\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    expandAll() {\n        this.expandCollapseAll('expand');\n    }\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    collapseAll() {\n        this.expandCollapseAll('collapse');\n    }\n    expandCollapseAll(action) {\n        let rows = this.getRows().filter((e) => {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter((e) => {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (let i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    }\n    expandCollapse(action, row, record, isChild) {\n        let gridRows = this.getRows();\n        let rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            let displayAction;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                let targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                let targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            let args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                let rows = gridRows.filter((r) => r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1)));\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                let childRecords = this.getCurrentViewRecords().filter((e) => {\n                    return (e.parentUniqueID === record.uniqueID);\n                });\n                let index = childRecords[0].parentItem.index;\n                let rows = gridRows.filter((r) => r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1)));\n                for (let i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    }\n    collapseRemoteChild(rows) {\n        for (let i = 0; i < rows.length; i++) {\n            let rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                let cRow = this.getRows().filter((r) => r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1)));\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    addListener() {\n        this.on('updateResults', this.updateResultModel, this);\n    }\n    updateResultModel(returnResult) {\n        this.dataResults = returnResult;\n    }\n    /**\n     * @hidden\n     */\n    removeListener() {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    }\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    clearFiltering() {\n        this.grid.clearFiltering();\n    }\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    removeFilteredColsByField(field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    }\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    selectRow(index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    }\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    selectRows(rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    }\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    clearSelection() {\n        this.grid.clearSelection();\n    }\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    selectCell(cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    }\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    getSelectedRows() {\n        return this.grid.getSelectedRows();\n    }\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    getSelectedRowIndexes() {\n        return this.grid.getSelectedRowIndexes();\n    }\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    getSelectedRowCellIndexes() {\n        return this.grid.getSelectedRowCellIndexes();\n    }\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    getSelectedRecords() {\n        return this.grid.getSelectedRecords();\n    }\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    getDataModule() {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    }\n};\n__decorate([\n    Property([])\n], TreeGrid.prototype, \"columns\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"childMapping\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"hasChildMapping\", void 0);\n__decorate([\n    Property(0)\n], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"idMapping\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"parentIdMapping\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"expandStateMapping\", void 0);\n__decorate([\n    Property([])\n], TreeGrid.prototype, \"dataSource\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"query\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"cloneQuery\", void 0);\n__decorate([\n    Property('AllPages')\n], TreeGrid.prototype, \"printMode\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowPaging\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowTextWrap\", void 0);\n__decorate([\n    Complex({}, TextWrapSettings)\n], TreeGrid.prototype, \"textWrapSettings\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowReordering\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowResizing\", void 0);\n__decorate([\n    Complex({}, PageSettings)\n], TreeGrid.prototype, \"pageSettings\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"pagerTemplate\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"showColumnMenu\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowSorting\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n__decorate([\n    Complex({}, SortSettings)\n], TreeGrid.prototype, \"sortSettings\", void 0);\n__decorate([\n    Collection([], AggregateRow)\n], TreeGrid.prototype, \"aggregates\", void 0);\n__decorate([\n    Complex({}, EditSettings)\n], TreeGrid.prototype, \"editSettings\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowFiltering\", void 0);\n__decorate([\n    Complex({}, FilterSettings)\n], TreeGrid.prototype, \"filterSettings\", void 0);\n__decorate([\n    Complex({}, SearchSettings)\n], TreeGrid.prototype, \"searchSettings\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"toolbar\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n__decorate([\n    Property('Default')\n], TreeGrid.prototype, \"gridLines\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"contextMenuItems\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"columnMenuItems\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"rowHeight\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"enableAltRow\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"allowKeyboard\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"enableHover\", void 0);\n__decorate([\n    Property('auto')\n], TreeGrid.prototype, \"height\", void 0);\n__decorate([\n    Property('auto')\n], TreeGrid.prototype, \"width\", void 0);\n__decorate([\n    Property('All')\n], TreeGrid.prototype, \"columnQueryMode\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"created\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"load\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"expanding\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"expanded\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"collapsing\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"collapsed\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"actionBegin\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"actionComplete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beginEdit\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellEdit\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"actionFailure\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"dataBound\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"dataStateChange\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDataBound\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"queryCellInfo\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"allowSelection\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowSelecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowSelected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDeselecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDeselected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"headerCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellSelecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnMenuClick\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellSelected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellDeselecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellDeselected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"resizeStart\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"resizing\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"resizeStop\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnDragStart\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnDrag\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnDrop\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"printComplete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforePrint\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"toolbarClick\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeDataBound\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"contextMenuClick\", void 0);\n__decorate([\n    Property(-1)\n], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n__decorate([\n    Complex({}, SelectionSettings)\n], TreeGrid.prototype, \"selectionSettings\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowExcelExport\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowPdfExport\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"excelExportComplete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforePdfExport\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"pdfExportComplete\", void 0);\nTreeGrid = __decorate([\n    NotifyPropertyChanges\n], TreeGrid);\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nexport class Reorder {\n    /**\n     * Constructor for Reorder module\n     */\n    constructor(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'reorder';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    }\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    getTreeColumn() {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    }\n    setTreeColumnIndex() {\n        let treeIndex;\n        for (let f = 0; f < this.parent.columns.length; f++) {\n            let treeColumnfield = getObject('field', this.treeColumn);\n            let parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    }\n}\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nexport class Resize {\n    /**\n     * Constructor for Resize module\n     */\n    constructor(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    autoFitColumns(fName) {\n        this.parent.grid.autoFitColumns(fName);\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'resize';\n    }\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    }\n}\n","/**\n * Base export\n */\nexport * from './treegrid';\nexport * from './constant';\nexport * from './data';\nexport * from '../actions/reorder';\nexport * from '../actions/resize';\n","/**\n * Models export\n */\nexport * from './column';\nexport * from './edit-settings';\nexport * from './filter-settings';\nexport * from './page-settings';\nexport * from './search-settings';\nexport * from './selection-settings';\nexport * from './summary';\n","/**\n * Renderer export\n */\nexport * from './render';\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nexport class Filter {\n    /**\n     * Constructor for Filter module\n     */\n    constructor(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'filter';\n    }\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    }\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    updatedFilteredRecord(dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (let f = 0; f < this.flatFilteredData.length; f++) {\n            let rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            let ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            let parent = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent)) {\n                let parRecord = this.flatFilteredData.filter((e) => {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    }\n    addParentRecord(record) {\n        let parent = this.parent.flatData.filter((e) => { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    }\n    checkChildExsist(records) {\n        let childRec = getObject('childRecords', records);\n        let isExist = false;\n        for (let count = 0; count < childRec.length; count++) {\n            let ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    }\n    updateFilterLevel() {\n        let record = this.filteredResult;\n        let len = this.filteredResult.length;\n        for (let c = 0; c < len; c++) {\n            let parent = this.parent.flatData.filter((e) => { return e.uniqueID === record[c].parentUniqueID; })[0];\n            let isPrst = record.indexOf(parent) !== -1;\n            if (isPrst) {\n                let parent = this.filteredResult.filter((e) => { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent.filterLevel + 1, record[c]);\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    }\n    clearFilterLevel(data) {\n        let count = 0;\n        let flatData = data.flatData;\n        let len = flatData.length;\n        let currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            let fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(getObject('hasFilteredChildRecords', currentRecord))) {\n                let ischild = getObject('childRecords', currentRecord);\n                setValue('hasFilteredChildRecords', null, currentRecord);\n                setValue('filterLevel', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    }\n}\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nexport class ExcelExport {\n    /**\n     * Constructor for Excel Export module\n     */\n    constructor(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'ExcelExport';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    }\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    }\n    updateExcelResultModel(returnResult) {\n        this.dataResults = returnResult;\n    }\n    Map(excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        let dataSource = this.parent.flatData;\n        let property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise((resolve, reject) => {\n            let dm = this.isLocal() ? new DataManager(dataSource) : this.parent.dataSource;\n            let query = new Query();\n            if (!this.isLocal()) {\n                query = this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then((e) => {\n                this.manipulateExportProperties(excelExportProperties, dataSource, this.isLocal() ? null : e);\n                return this.parent.grid.excelExportModule.Map(this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    }\n    generateQuery(query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    }\n    manipulateExportProperties(property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            let args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    }\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    excelQueryCellInfo(args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            let style = {};\n            let data = args.data;\n            let ispadfilter = isNullOrUndefined(data.filterLevel);\n            let pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    }\n    isLocal() {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    }\n}\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nexport class PdfExport {\n    /**\n     * Constructor for PDF export module\n     */\n    constructor(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'PdfExport';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    }\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    updatePdfResultModel(returnResult) {\n        this.dataResults = returnResult;\n    }\n    Map(pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        let dtSrc = this.parent.flatData;\n        let prop = Object();\n        setValue('cancel', false, prop);\n        let isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise((resolve, reject) => {\n            let dm = isLocal ? new DataManager(dtSrc) : this.parent.dataSource;\n            let query = new Query();\n            if (!isLocal) {\n                query = this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then((e) => {\n                this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return this.parent.grid.pdfExportModule.Map(this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    }\n    generateQuery(query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    }\n    manipulatePdfProperties(prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            let args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    }\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    pdfQueryCellInfo(args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            let style = {};\n            let data = getObject('data', args);\n            let ispadfilter = isNullOrUndefined(data.filterLevel);\n            let pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    }\n}\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nexport class Page {\n    constructor(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'pager';\n    }\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    refresh() {\n        this.parent.grid.pagerModule.refresh();\n    }\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    goToPage(pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    }\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    updateExternalMessage(message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    }\n    /**\n     * @hidden\n     */\n    collapseExpandPagedchilds(rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        let ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    }\n    pageRoot(pagedResults, temp, result) {\n        let newResults = isNullOrUndefined(result) ? [] : result;\n        for (let t = 0; t < temp.length; t++) {\n            newResults.push(temp[t]);\n            let res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter((e) => {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this.pageRoot(pagedResults, res, newResults);\n            }\n        }\n        return newResults;\n    }\n    pageAction(pageingDetails) {\n        let dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            let temp = [];\n            let propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            let query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            let size = this.parent.grid.pageSettings.pageSize;\n            let current = this.parent.grid.pageSettings.currentPage;\n            let skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            let newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            let dm = new DataManager(pageingDetails.result);\n            let expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            let parents = dm.executeLocal(new Query().where(expanded));\n            let visualData = parents.filter((e) => {\n                return getExpandStatus(this.parent, e, parents);\n            });\n            pageingDetails.count = visualData.length;\n            let query = new Query();\n            let size = this.parent.grid.pageSettings.pageSize;\n            let current = this.parent.grid.pageSettings.currentPage;\n            let skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    }\n}\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nexport class Toolbar {\n    constructor(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'toolbar';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    }\n    toolbarClickHandler(args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        else if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    }\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    getToolbar() {\n        return this.parent.grid.toolbarModule.getToolbar();\n    }\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    enableItems(items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    }\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nexport class Aggregate {\n    /**\n     * Constructor for Aggregate module\n     */\n    constructor(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'summary';\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    }\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    calculateSummaryValue(summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        let parentRecord;\n        let parentDataLength = Object.keys(filteredData).length;\n        let parentData;\n        parentData = [];\n        for (let p = 0, len = parentDataLength; p < len; p++) {\n            let summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        let parentRecords = findParentRecords(parentData);\n        let flatRecords;\n        flatRecords = parentData.slice();\n        let columnLength = Object.keys(this.parent.columns).length;\n        let summaryLength = Object.keys(this.parent.aggregates).length;\n        let dataLength = Object.keys(parentRecords).length;\n        let childRecordsLength;\n        for (let i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            for (let summaryRowIndex = 1, len = summaryLength; summaryRowIndex <= len; summaryRowIndex++) {\n                let item;\n                item = {};\n                for (let columnIndex = 0, len = columnLength; columnIndex < len; columnIndex++) {\n                    let field = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                        this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this.createSummaryItem(item, this.parent.aggregates[summaryRowIndex - 1]);\n                    let idx;\n                    flatRecords.map((e, i) => { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx = i;\n                        return;\n                    } });\n                    let currentIndex = idx + childRecordsLength + summaryRowIndex;\n                    let summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    let level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    let index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        let childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    continue;\n                }\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    }\n    getChildRecordsLength(parentData, flatData) {\n        let recordLength = Object.keys(flatData).length;\n        let record;\n        for (let i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            let parent = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter((e) => { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent) {\n                this.flatChildRecords.push(record);\n                let hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    }\n    createSummaryItem(itemData, summary) {\n        let summaryColumnLength = Object.keys(summary.columns).length;\n        for (let i = 0, len = summaryColumnLength; i < len; i++) {\n            let displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            let keys = Object.keys(itemData);\n            for (let key of keys) {\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    }\n    getSummaryValues(summaryColumn, summaryData) {\n        let qry = new Query();\n        let single;\n        single = {};\n        let helper = {};\n        let type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        let formatFn = summaryColumn.getFormatter() || (() => (a) => a)();\n        summaryColumn.setTemplate(helper);\n        let tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        let sumData = new DataManager(summaryData).executeLocal(qry);\n        let types = summaryColumn.type;\n        let summaryKey;\n        types = [summaryColumn.type];\n        types.forEach((type) => {\n            summaryKey = type;\n            let key = summaryColumn.field + ' - ' + type.toLowerCase();\n            let val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, this.parent);\n            let disp = summaryColumn.columnName;\n            let value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        let cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        let value = single[summaryColumn.columnName][summaryKey];\n        let summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    }\n    getFormatFromType(summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        let obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    }\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nexport class ContextMenu {\n    constructor(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    }\n    contextMenuOpen(args) {\n        let addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    }\n    contextMenuClick(args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'contextMenu';\n    }\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    getContextMenu() {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    }\n}\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nexport class Edit {\n    /**\n     * Constructor for Edit module\n     */\n    constructor(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'edit';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n    }\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    applyFormValidation(cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    }\n    recordDoubleClick(args) {\n        let target = args.target;\n        this.doubleClickTarget = target;\n        let column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    }\n    updateGridEditMode(mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        let updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    }\n    keyPressed(args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    }\n    cellEdit(args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    }\n    enableToolbarItems(request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            let toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    }\n    batchCancel(e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    }\n    cellSave(args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            let row = args.cell.parentNode;\n            let rowIndex;\n            let primaryKeys = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter((e, i) => {\n                    if (e[primaryKeys[0]] === args.rowData[primaryKeys[0]]) {\n                        rowIndex = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex];\n            this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n            if (this.parent.grid.aggregateModule) {\n                this.parent.grid.aggregateModule.refresh(args.rowData);\n            }\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n            }\n            this.enableToolbarItems('save');\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' }, args.columnName);\n            let saveArgs = {\n                type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                previousData: args.previousValue, row: row, target: args.cell\n            };\n            this.parent.trigger(events.actionComplete, saveArgs);\n        }\n    }\n    beginAdd(args) {\n        let position;\n        let index = this.addRowIndex;\n        let records = this.parent.grid.getCurrentViewRecords();\n        let rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                let focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    let errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (let i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    }\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    beginEdit(args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            let data = args.data;\n            for (let i = 0; i < data.length; i++) {\n                args.data = [...data, ...findChildrenRecords(data[i])];\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    }\n    savePreviousRowPosition(args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    }\n    beginAddEdit(args) {\n        let value = args.data;\n        if (args.action === 'add') {\n            let key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            let position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            let currentData = this.parent.grid.getCurrentViewRecords();\n            let index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            let level;\n            let dataIndex;\n            let idMapping;\n            let parentUniqueID;\n            let parentItem;\n            let parentIdMapping;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    let dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    }\n    addAction(details, treeData) {\n        let value;\n        let isSkip = false;\n        let currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    }\n    editAction(details, columnName) {\n        let value = details.value;\n        let action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        let i;\n        let j;\n        let key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        let treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        let modifiedData = [];\n        let originalData = value;\n        let isSkip = false;\n        let currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            let addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (let k = 0; k < modifiedData.length; k++) {\n                let keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                while (i-- && i >= 0) {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            let currentData = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this.isSelfReference) {\n                                if (!isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                                    let parentData = this.parent.flatData.filter((e) => e[this.parent.idMapping] === currentData[this.parent.parentIdMapping])[0];\n                                    let childRecords = parentData ? parentData[this.parent.childMapping] : [];\n                                    for (let p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this.parent.idMapping] === currentData[this.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j]) && (this.parent.editSettings.mode !== 'Cell' || keys[j] === columnName)) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                let index;\n                                if (this.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this.isSelfReference) {\n                                        originalData[this.parent.parentIdMapping] = treeData[i][this.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this.parent.childMapping)) {\n                                            treeData[i][this.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this.parent.childMapping].push(originalData);\n                                        this.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this.parent.childMapping])) {\n                        if (this.removeChildRecords(treeData[i][this.parent.childMapping], modifiedData[k], action, key, originalData, columnName)) {\n                            this.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                }\n            }\n        }\n        if (action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    }\n    removeChildRecords(childRecords, modifiedData, action, key, originalData, columnName) {\n        let isChildAll = false;\n        let j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    let keys = Object.keys(modifiedData);\n                    for (let i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i]) && (this.parent.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    let parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData, columnName)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    }\n    updateParentRow(key, record, action, child) {\n        let currentRecords = this.parent.grid.getCurrentViewRecords();\n        let index;\n        currentRecords.map((e, i) => { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            let childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        let row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    }\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    editFormValidate() {\n        return this.parent.grid.editModule.editFormValidate();\n    }\n    /**\n     * @hidden\n     */\n    destroyForm() {\n        this.parent.grid.editModule.destroyForm();\n    }\n}\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nexport class CommandColumn {\n    constructor(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'commandColumn';\n    }\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        //this.removeEventListener();\n    }\n}\n","/**\n * actions export\n */\nexport * from './filter';\nexport * from './excel-export';\nexport * from './pdf-export';\nexport * from './page';\nexport * from './toolbar';\nexport * from './summary';\nexport * from './sort';\nexport * from './reorder';\nexport * from './resize';\nexport * from './column-menu';\nexport * from './context-menu';\nexport * from './edit';\nexport * from './command-column';\n","/**\n * TreeGrid component exported items\n */\nexport * from './base';\nexport * from './models';\nexport * from './renderer';\nexport * from './utils';\nexport * from './enum';\nexport * from './actions';\n","/**\n * Export TreeGrid component\n */\nexport * from './treegrid/index';\n"],"names":["__decorate","this","ColumnMenu","GridColumnMenu","Print","GridPrint","events.printGridInit","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","collapsed","Sort","GridSort","events.remoteExpand","events.expanded","events.actionComplete","events.pagingActions","events.load","events.rowSelected","events.rowDeselected","events.toolbarClick","events.resizeStop","events.dataBound","events.cellSave","events.cellEdit","events.batchCancel","events.recordDoubleClick","events.actionBegin","events.beginEdit","events.crudAction","events.beginAdd","events.batchSave","events.contextMenuClick","events.contextMenuOpen","events.expanding","events.collapsing","events.collapsed","events.localPagedExpandCollapse","Reorder","GridReorder","Resize","GridResize","Filter","GridFilter","ExcelExport","GridExcel","event.beforeExcelExport","PdfExport","GridPdf","event.beforePdfExport","Page","GridPage","expanded","Predicate","Toolbar","tool","Aggregate","GridAggregate","ContextMenu","cmenu","Edit","GridEdit","events.keyPressed","events.doubleTap","CommandColumn","Command"],"mappings":";;;;;AACA;;;AAGA,AAAO,MAAM,MAAM,CAAC;IAChB,WAAW,CAAC,OAAO,EAAE;;;;;;QAMjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;;;;QAKzB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;;;;;;QAMf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;;;;;;QAM5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;;;;;QAM3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;;;;;QAM3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;;;;;QAMzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;;;;;;;;;;;QAW1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACxB;CACJ;;AC5DD,IAAIA,YAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AAEA;;;AAGA,AAAO,MAAM,cAAc,SAAS,aAAa,CAAC;CACjD;AACDD,YAAU,CAAC;IACP,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC;CAC5B,EAAE,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAChDA,YAAU,CAAC;IACP,QAAQ,CAAC,WAAW,CAAC;CACxB,EAAE,cAAc,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7CA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7CA,YAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,cAAc,CAAC,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5DA,YAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,cAAc,CAAC,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3DA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAClDA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,cAAc,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AACrDA,YAAU,CAAC;IACP,QAAQ,CAAC,QAAQ,CAAC;CACrB,EAAE,cAAc,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;;ACnCtD;;;;AAIA,AAAO,MAAME,YAAU,CAAC;;;;IAIpB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,UAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;IACD,aAAa,GAAG;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;KAC5D;IACD,OAAO,GAAG;;KAET;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,YAAY,CAAC;KACvB;CACJ;;AC1BD;;;AAGA,AAAO,MAAM,IAAI,GAAG,MAAM,CAAC;;AAE3B,AAAO,MAAM,YAAY,GAAG,cAAc,CAAC;;AAE3C,AAAO,MAAM,SAAS,GAAG,WAAW,CAAC;;AAErC,AAAO,MAAM,aAAa,GAAG,eAAe,CAAC;;AAE7C,AAAO,MAAM,eAAe,GAAG,iBAAiB,CAAC;;AAEjD,AAAO,MAAM,WAAW,GAAG,aAAa,CAAC;;AAEzC,AAAO,MAAM,cAAc,GAAG,gBAAgB,CAAC;;AAE/C,AAAO,MAAM,WAAW,GAAG,aAAa,CAAC;;AAEzC,AAAO,MAAM,aAAa,GAAG,eAAe,CAAC;;AAE7C,AAAO,MAAM,YAAY,GAAG,cAAc,CAAC;;AAE3C,AAAO,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;;AAErD,AAAO,MAAM,eAAe,GAAG,iBAAiB,CAAC;;AAEjD,AAAO,MAAM,UAAU,GAAG,YAAY,CAAC;;AAEvC,AAAO,MAAM,QAAQ,GAAG,UAAU,CAAC;;AAEnC,AAAO,MAAM,SAAS,GAAG,WAAW,CAAC;;AAErC,AAAO,MAAM,SAAS,GAAG,WAAW,CAAC;;AAErC,AAAO,MAAM,UAAU,GAAG,YAAY,CAAC;;AAEvC,AAAO,MAAM,YAAY,GAAG,cAAc,CAAC;;AAE3C,AAAO,MAAM,wBAAwB,GAAG,0BAA0B,CAAC;;AAEnE,AAAO,MAAM,aAAa,GAAG,eAAe,CAAC;;AAE7C,AAAO,MAAM,aAAa,GAAG,gBAAgB,CAAC;;AAE9C,AAAO,MAAM,eAAe,GAAG,iBAAiB,CAAC;;AAEjD,AAAO,MAAM,gBAAgB,GAAG,kBAAkB,CAAC;;AAEnD,AAAO,MAAM,uBAAuB,GAAG,yBAAyB,CAAC;;AAEjE,AAAO,MAAM,UAAU,GAAG,YAAY,CAAC;;AAEvC,AAAO,MAAM,SAAS,GAAG,WAAW,CAAC;;AAErC,AAAO,MAAM,QAAQ,GAAG,UAAU,CAAC;;AAEnC,AAAO,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;;AAErD,AAAO,MAAM,QAAQ,GAAG,UAAU,CAAC;;AAEnC,AAAO,MAAM,SAAS,GAAG,WAAW,CAAC;;AAErC,AAAO,MAAM,QAAQ,GAAG,UAAU,CAAC;;AAEnC,AAAO,MAAM,WAAW,GAAG,aAAa,CAAC;;AAEzC,AAAO,MAAM,WAAW,GAAG,aAAa,CAAC;;AAEzC,AAAO,MAAM,QAAQ,GAAG,UAAU,CAAC;;AAEnC,AAAO,MAAM,cAAc,GAAG,gBAAgB,CAAC;;AAE/C,AAAO,MAAM,eAAe,GAAG,iBAAiB,CAAC;;AAEjD,AAAO,MAAM,SAAS,GAAG,WAAW,CAAC;;AAErC,AAAO,MAAM,UAAU,GAAG,aAAa,CAAC;;AAExC,AAAO,MAAM,UAAU,GAAG,aAAa,CAAC;;AAExC,AAAO,MAAM,SAAS,GAAG,YAAY;;AC9ErC;;;;AAIA,AAAO,MAAMC,OAAK,CAAC;;;;IAIf,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,CAACC,KAAS,CAAC,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,OAAO,CAAC;KAClB;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAACC,aAAoB,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KACvE;IACD,mBAAmB,GAAG;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAACA,aAAoB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAClE;IACD,aAAa,CAAC,SAAS,EAAE;QACrB,IAAI,IAAI,GAAG,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAI,WAAW,GAAG,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAACC,aAAoB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5E,IAAI,CAAC,gBAAgB,CAACC,YAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1E,IAAI,CAAC,gBAAgB,CAACC,eAAsB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAChF,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,YAAY,CAAC,CAAC;KACzC;IACD,KAAK,GAAG;QACJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;KAC5B;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;CACJ;;ACnDD,IAAIT,YAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AACA;;;AAGA,AAAO,MAAM,cAAc,SAAS,aAAa,CAAC;CACjD;AACDD,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/CA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,cAAc,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AACnDA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAClDA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5CA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;;AC1BtD,IAAIA,YAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AACA;;;AAGA,AAAO,MAAM,iBAAiB,SAAS,aAAa,CAAC;CACpD;AACDD,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAChDA,YAAU,CAAC;IACP,QAAQ,CAAC,MAAM,CAAC;CACnB,EAAE,iBAAiB,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7DA,YAAU,CAAC;IACP,QAAQ,CAAC,QAAQ,CAAC;CACrB,EAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAChDA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,iBAAiB,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;;ACnBrD,SAAS,YAAY,CAAC,MAAM,EAAE;IACjC,IAAI,MAAM,CAAC,UAAU,YAAY,WAAW,EAAE;QAC1C,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;QACxC,QAAQ,OAAO,YAAY,YAAY;aAClC,OAAO,YAAY,aAAa,CAAC,KAAK,OAAO,YAAY,gBAAgB,CAAC;aAC1E,OAAO,YAAY,YAAY,CAAC,IAAI,OAAO,YAAY,UAAU,EAAE;KAC3E;IACD,OAAO,KAAK,CAAC;CAChB;;;;AAID,AAAO,SAAS,iBAAiB,CAAC,OAAO,EAAE;IACvC,IAAI,KAAK,CAAC;IACV,KAAK,GAAG,EAAE,CAAC;IACX,IAAI,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;IAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,aAAa,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC/C,IAAI,QAAQ,GAAG,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,QAAQ,EAAE;YACV,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1B;KACJ;IACD,OAAO,KAAK,CAAC;CAChB;;;;AAID,AAAO,SAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;IACrD,IAAI,YAAY,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI;QAC1D,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,IAAI,WAAW,CAAC;IAChB,IAAI,YAAY,IAAI,IAAI,EAAE;QACtB,IAAI,MAAM,CAAC,aAAa,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;eAChF,CAAC,YAAY,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;YAC7C,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,OAAO,KAAK,CAAC;SAChB;aACI,IAAI,YAAY,CAAC,QAAQ,KAAK,KAAK,EAAE;YACtC,OAAO,KAAK,CAAC;SAChB;aACI,IAAI,YAAY,CAAC,UAAU,EAAE;YAC9B,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,QAAQ,KAAK,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACpG,IAAI,WAAW,IAAI,MAAM,CAAC,aAAa,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;mBAC9F,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;gBAC5C,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC7B,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,WAAW,IAAI,WAAW,CAAC,QAAQ,KAAK,KAAK,EAAE;gBAC/C,OAAO,KAAK,CAAC;aAChB;iBACI,IAAI,WAAW,EAAE;gBAClB,OAAO,eAAe,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;aACxD;YACD,OAAO,IAAI,CAAC;SACf;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;SACI;QACD,OAAO,IAAI,CAAC;KACf;CACJ;;;;AAID,AAAO,SAAS,mBAAmB,CAAC,OAAO,EAAE;IACzC,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;QACxD,OAAO,EAAE,CAAC;KACb;IACD,IAAI,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;IACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAClE,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE;YACjC,KAAK,GAAG,CAAC,GAAG,KAAK,EAAE,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D;KACJ;IACD,OAAO,KAAK,CAAC;CAChB;AACD,AAAO,SAAS,SAAS,CAAC,MAAM,EAAE;IAC9B,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE;QACtB,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;QAC3B,OAAO,CAAC,iBAAiB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KACvC;IACD,OAAO,IAAI,CAAC;CACf;AACD,AAAO,SAAS,WAAW,CAAC,KAAK,EAAE;IAC/B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,GAAG,CAAC;IACR,IAAI,IAAI,CAAC;IACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,GAAG,GAAG,EAAE,CAAC;QACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpC;QACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,OAAO,MAAM,CAAC;CACjB;AACD,AAAO,SAAS,YAAY,CAAC,KAAK,EAAE;IAChC,OAAO,KAAK,CAAC,eAAe,CAAC;IAC7B,OAAO,KAAK,CAAC,YAAY,CAAC;IAC1B,OAAO,KAAK,CAAC,KAAK,CAAC;IACnB,OAAO,KAAK,CAAC,UAAU,CAAC;IACxB,OAAO,KAAK,CAAC,KAAK,CAAC;IACnB,OAAO,KAAK,CAAC;CAChB;;AC5GD;;;;AAIA,AAAO,MAAM,MAAM,CAAC;;;;IAIhB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;IAID,WAAW,CAAC,IAAI,EAAE;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO;SACV;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,KAAK,CAAC;QACV,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;aAClC,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,KAAK,MAAM,CAAC,CAAC;iBAC7E,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAC7D,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YAC9B,IAAIU,YAAS,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,EAAE,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBAC1G,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBAC7E,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;YACvF,IAAIA,YAAS,EAAE;gBACX,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aACnC;SACJ;aACI;YACD,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACnD;QACD,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK;gBAChE,OAAO,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aACnF,CAAC,CAAC;YACH,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,IAAI,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,WAAW,GAAG,MAAM,CAAC;gBAC3D,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;aAC/D;SACJ;QACD,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,gBAAgB,GAAG,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3E,IAAI,UAAU,GAAG,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,UAAU,EAAE;YACZ,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAACF,YAAmB,EAAE,IAAI,CAAC,CAAC;KAClD;;;;IAID,UAAU,CAAC,IAAI,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO;SACV;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtD,IAAI,GAAG,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QACtD,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;YAC3E,IAAI,SAAS,GAAG,aAAa,CAAC,KAAK,EAAE;gBACjC,SAAS,EAAE,wBAAwB;aACtC,CAAC,CAAC;YACH,IAAI,eAAe,GAAG,aAAa,CAAC,MAAM,EAAE;gBACxC,SAAS,EAAE,gBAAgB;gBAC3B,MAAM,EAAE,oCAAoC;aAC/C,CAAC,CAAC;YACH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC1B,eAAe,IAAI,EAAE,CAAC;gBACtB,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;aACtD;YACD,IAAI,YAAY,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,uBAAuB,CAAC;kBAC7D,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC;YAC1D,IAAI,YAAY,EAAE;gBACd,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC,CAAC;gBACvC,IAAI,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;oBACnC,SAAS,EAAE,SAAS;iBACvB,CAAC,CAAC;gBACH,IAAI,MAAM,CAAC;gBACX,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;oBAC3B,MAAM,GAAG,IAAI,CAAC,QAAQ;yBACjB,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;wBACjG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;iBACtC;qBACI;oBACD,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;iBAC/G;gBACD,IAAIE,YAAS,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;uBAC7F,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;uBACrC,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,KAAK,MAAM,CAAC,CAAC,EAAE;oBACtFA,YAAS,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;iBAClG;gBACD,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,IAAIA,YAAS,IAAI,kBAAkB,GAAG,oBAAoB,CAAC,CAAC;gBAC1F,eAAe,IAAI,EAAE,CAAC;gBACtB,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAClC,eAAe,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;gBACpC,eAAe,IAAI,CAAC,CAAC;gBACrB,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;aACtD;iBACI,IAAI,GAAG,EAAE;;gBAEV,eAAe,IAAI,EAAE,CAAC;gBACtB,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;gBACnD,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC;aACtD;;;;;YAKD,IAAI,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE;gBACpC,SAAS,EAAE,YAAY;aAC1B,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;gBAC3B,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,cAAc,GAAG,eAAe,GAAG,KAAK,CAAC;aACtE;YACD,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,IAAI;gBAC5D,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3E,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC;YACpC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SACpC;QACD,IAAI,UAAU,GAAG,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,UAAU,EAAE;YACZ,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC,CAAC;YACvC,IAAI,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,IAAI;gBAC1C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC1G;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAACH,aAAoB,EAAE,IAAI,CAAC,CAAC;KACnD;CACJ;;AC1ID;;;;AAIA,AAAO,MAAMI,MAAI,CAAC;IACd,WAAW,CAAC,IAAI,EAAE;QACd,IAAI,CAAC,MAAM,CAACC,IAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACvE,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,MAAM,CAAC;KACjB;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KACjE;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAC5D;IACD,aAAa,CAAC,IAAI,EAAE;QAChB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;KAChC;IACD,iBAAiB,CAAC,IAAI,EAAE;QACpB,IAAI,QAAQ,GAAG,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,aAAa,GAAG,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,WAAW,GAAG,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,cAAc,GAAG,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YACzC,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;gBAC/D,eAAe,CAAC,YAAY;oBACxB,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC9C,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC;gBACvC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC;aACnC;YACD,IAAI,iBAAiB,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;gBAC7C,eAAe,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,EAAE;gBACnC,IAAI,UAAU,GAAG,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;gBAC3C,OAAO,UAAU,CAAC,YAAY,CAAC;gBAC/B,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC5C,eAAe,CAAC,UAAU,GAAG,UAAU,CAAC;gBACxC,eAAe,CAAC,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC;gBACrD,KAAK,GAAG,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC;aACnC;YACD,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC;YAC9B,IAAI,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC/D,eAAe,CAAC,UAAU,EAAE;gBAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;gBAC/D,IAAI,CAAC,iBAAiB,CAAC,EAAE,YAAY,EAAE,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,aAAa,EAAE,eAAe;oBAC5G,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;aACzC;SACJ;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,YAAY,EAAE,cAAc,EAAE,CAAC,CAAC;KACpG;IACD,oBAAoB,CAAC,eAAe,EAAE;QAClC,IAAI,IAAI,GAAG,SAAS,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QACtD,IAAI,SAAS,GAAG,SAAS,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QACrD,IAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;gBAC9F,IAAI,UAAU,CAAC;gBACf,IAAI,aAAa,CAAC;gBAClB,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;oBACzC,UAAU,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBACtF;qBACI;oBACD,UAAU,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBAC9E;gBACD,aAAa,GAAG,UAAU,CAAC;gBAC3B,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,aAAa,CAAC;iBAChD;gBACD,IAAI,CAAC,oBAAoB,CAAC,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;aACjG;SACJ;KACJ;;;;;;;;IAQD,UAAU,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;QAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;KACnE;IACD,gBAAgB,CAAC,KAAK,EAAE;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC5C;;;;;;IAMD,WAAW,GAAG;QACV,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;KAC5D;;;;;IAKD,YAAY,GAAG;QACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;CACJ;;AC3ID;;;;AAIA,AAAO,MAAM,gBAAgB,CAAC;IAC1B,WAAW,CAAC,IAAI,EAAE;QACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;KAC1E;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,EAAE,CAACC,YAAmB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KAC7D;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACA,YAAmB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;KAC5D;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;IAED,QAAQ,GAAG;QACP,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,YAAY,WAAW,CAAC,EAAE;YAClD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;;;KAGf;;;;;IAKD,iBAAiB,CAAC,IAAI,EAAE;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,YAAY,WAAW,EAAE;YACvF,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAChC,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;oBACpD,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBACpC,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;oBAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;iBACvE;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;oBAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;oBACpC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;oBACjB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;oBAChD,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;wBAC7B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;wBACnF,IAAI,GAAG,GAAG,SAAS,CAAC,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;4BAClE,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,KAAK,IAAI,CAAC;yBAC5C,CAAC,CAAC,MAAM,CAAC;wBACV,IAAI,GAAG,KAAK,CAAC,EAAE;4BACX,QAAQ,CAAC,6BAA6B,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC;4BAC3D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;gCAC1C,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;gCAChD,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gCACpF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;6BAC/B;4BACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;yBAClC;qBACJ,CAAC,CAAC;iBACN;aACJ;SACJ;aACI,IAAI,IAAI,YAAY,KAAK,EAAE;YAC5B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE;oBACrD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;iBACtD;aACJ;YACD,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,KAAK,EAAE;iBAC3D,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,UAAU,EAAE,IAAI,CAAC;iBACpD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;;YAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAChD,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;oBACZ,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACnC,IAAI,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC/C,IAAI,IAAI,CAAC,eAAe,EAAE;4BACtB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,EAAE;gCAC7F,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;gCAChE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE;oCAC5E,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oCACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iCACjC;6BACJ;yBACJ;6BACI;4BACD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;yBACnE;qBACJ;iBACJ;aACJ;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;aAC7B;iBACI;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SACzB;;;;;KAKJ;;;;;;;;;;;IAWD,oBAAoB,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE;QACtD,IAAI,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,QAAQ,EAAE;gBAC7C,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE;wBACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;wBAChD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBAC9B,OAAO,IAAI,CAAC;qBACf;iBACJ;aACJ;iBACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;gBAC5D,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;aACzG;SACJ;QACD,OAAO,OAAO,CAAC;KAClB;;;;;IAKD,sBAAsB,CAAC,IAAI,EAAE;QACzB,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC1D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAClC;aACI;YACD,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;wBAC9G,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC5C,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;oBACrD,OAAO,CAAC,GAAG,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC;iBACvC;aACJ;SACJ;QACD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;KAC7C;;;;;IAKD,oBAAoB,CAAC,UAAU,EAAE;QAC7B,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC;QAClE,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;YAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC;aAClD;YACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAACC,QAAe,EAAE,IAAI,CAAC,CAAC;SAC9C;aACI;YACD,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAChC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,CAAC;YAC3D,IAAI,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,QAAQ,IAAI,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;YACrF,GAAG,CAAC,OAAO,GAAG,WAAW,CAAC;YAC1B,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,OAAO,EAAE,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1F,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;gBAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;gBAC7C,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAI,SAAS,GAAG,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;gBACjD,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC9C,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;oBAClD,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;oBACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;2BACzG,EAAE,SAAS,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;wBAClC,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC;wBACjC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;qBAC9B;oBACD,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3C;gBACD,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC7B,QAAQ,CAAC,QAAQ,EAAE,qBAAqB,EAAE,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,MAAM,CAAC,OAAO,CAACC,cAAqB,EAAE,CAAC,CAAC,CAAC;gBAC9C,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACjC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;gBAC1D,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,MAAM,CAAC,OAAO,CAACD,QAAe,EAAE,IAAI,CAAC,CAAC;aAC9C,CAAC,CAAC;SACN;KACJ;IACD,YAAY,GAAG;QACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC5B;IACD,aAAa,CAAC,IAAI,EAAE,aAAa,EAAE;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1D,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;gBAC3D,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACjE,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC;gBACnC,WAAW,CAAC,QAAQ,GAAG,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;sBAChF,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC;aAC5D;YACD,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACtF,IAAI,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE;gBAC7D,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC5C;YACD,WAAW,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;YACjE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,EAAE;gBACnC,IAAI,UAAU,GAAG,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;gBAC3C,OAAO,UAAU,CAAC,YAAY,CAAC;gBAC/B,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC5C,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;gBACpC,WAAW,CAAC,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC;gBACjD,KAAK,GAAG,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC;aACnC;YACD,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1B,IAAI,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,WAAW,CAAC,UAAU,EAAE;gBACvF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,EAAE;gBAC3G,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,WAAW,CAAC,CAAC;aAC1E;SACJ;KACJ;IACD,aAAa,CAAC,IAAI,EAAE;QAChB,IAAI,UAAU,GAAG,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACpD,IAAI,UAAU,GAAG,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,YAAY,GAAG,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAChE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;oBAC1E,IAAI,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxD,IAAI,QAAQ,KAAK,UAAU,EAAE;wBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;qBACvC;iBACJ;aACJ;SACJ;aACI;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAChE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;SACJ;KACJ;;;;;IAKD,aAAa,CAAC,IAAI,EAAE;QAChB,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC1C,IAAI,OAAO,GAAG,OAAO,YAAY,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC;QACjF,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM;aACjF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAClD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;YACtB,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACzC,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;gBAC9B,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;gBACxB,SAAS,GAAG,QAAQ,CAAC,wBAAwB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;gBACnF,SAAS,GAAG,QAAQ,CAAC,wBAAwB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;aACtF;YACD,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;YACpE,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,CAAC;YACrE,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;YAC/D,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;;YAE/B,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxC,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACrC,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;oBAC9B,SAAS,GAAG,QAAQ,CAAC,wBAAwB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;iBAC3F;gBACD,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,cAAc,CAAC,CAAC;gBACxE,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;aAC1F;SACJ;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC;eACrF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE;YACxG,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACzC,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;gBAC9B,SAAS,GAAG,QAAQ,CAAC,wBAAwB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;aAC3F;YACD,IAAI,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,cAAc,CAAC,CAAC;YAC5E,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SACvG;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;YACvE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,UAAU,CAAC;YACf,IAAI,MAAM,GAAG,QAAQ,CAAC;YACtB,AACA,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;gBAC1D,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;iBACtD;qBACI;oBACD,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;iBACtD;gBACD,AACA,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAIH,MAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/C,IAAI,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;gBACzB,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;oBAC9E,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;oBACzF,IAAI,OAAO,GAAG,GAAG,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;wBAC9C,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;wBAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;oBACzD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;iBAC5E;gBACD,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACpE,AACA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;gBACtG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE;oBACpC,YAAY,EAAE,YAAY;oBAC1B,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO;iBAC/C,CAAC,CAAC;aACN;YACD,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;YACtC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxC,IAAI,MAAM,GAAG,KAAK,CAAC;gBACnB,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACrC,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,cAAc,CAAC,CAAC;gBACxE,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;aACpG;SACJ;QACD,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAACK,aAAoB,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5E,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAClC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;SAClC;;;;;;;;QAQD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;KAC7C;;;;IAID,UAAU,CAAC,UAAU,EAAE;QACnB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;CACJ;;AChaD;;;;AAIA,AAAO,IAAI,WAAW,CAAC;AACvB,CAAC,UAAU,WAAW,EAAE;IACpB,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAC5C,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAC9C,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAClD,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAClD,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAClD,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAClD,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IACxD,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IAC5D,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IAC5D,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IACxD,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IACzD,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO,CAAC;CACpD,EAAE,WAAW,KAAK,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC;;;;;AAKtC,AAAO,IAAI,gBAAgB,CAAC;AAC5B,CAAC,UAAU,gBAAgB,EAAE;IACzB,gBAAgB,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IAC9D,gBAAgB,CAAC,gBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;IACpE,gBAAgB,CAAC,gBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC;IAC1E,gBAAgB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,gBAAgB,CAAC;IAC5E,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IACxD,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAC5D,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IACxD,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAC5D,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAClE,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IACtE,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IACnE,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IACnE,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;IACjE,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;IACjE,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;IACjE,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;CAChE,EAAE,gBAAgB,KAAK,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC;;ACzChD,IAAIhB,YAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AACA;;;AAGA,AAAO,MAAM,YAAY,SAAS,aAAa,CAAC;CAC/C;AACDD,YAAU,CAAC;IACP,QAAQ,CAAC,EAAE,CAAC;CACf,EAAE,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/CA,YAAU,CAAC;IACP,QAAQ,CAAC,CAAC,CAAC;CACd,EAAE,YAAY,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAChDA,YAAU,CAAC;IACP,QAAQ,CAAC,CAAC,CAAC;CACd,EAAE,YAAY,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAClDA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,YAAY,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACxDA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACxDA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAChDA,YAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/CA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;;ACnCnD,IAAIA,YAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AAGA;;;AAGA,AAAO,MAAM,eAAe,SAAS,aAAa,CAAC;IAC/C,WAAW,GAAG;QACV,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,oBAAoB,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;;;;IAID,YAAY,CAAC,WAAW,EAAE;QACtB,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvD;KACJ;;;;IAID,iBAAiB,CAAC,MAAM,EAAE;QACtB,IAAI,MAAM,CAAC,IAAI,EAAE;YACb,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC1C;aACI;YACD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC5C;KACJ;;;;IAID,YAAY,GAAG;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;IAID,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE;QACrB,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC;gBAClG,QAAQ,EAAE,gBAAgB,EAAE,CAAC;SACpC;KACJ;;;;IAID,WAAW,CAAC,IAAI,EAAE;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;KACxD;;;;IAID,mBAAmB,CAAC,IAAI,EAAE;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAClC;CACJ;AACDD,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9CA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,eAAe,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACxDA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,eAAe,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/CA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,eAAe,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAChDA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,eAAe,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AACpDA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,eAAe,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AACzD,AAAO,MAAM,YAAY,SAAS,aAAa,CAAC;CAC/C;AACDA,YAAU,CAAC;IACP,UAAU,CAAC,EAAE,EAAE,eAAe,CAAC;CAClC,EAAE,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9CA,YAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,YAAY,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;;AC1FvD,IAAIA,YAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AACA;;;AAGA,AAAO,MAAM,YAAY,SAAS,aAAa,CAAC;CAC/C;AACDD,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAClDA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AACnDA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AACpDA,YAAU,CAAC;IACP,QAAQ,CAAC,MAAM,CAAC;CACnB,EAAE,YAAY,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3CA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACrDA,YAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,YAAY,CAAC,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1DA,YAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,YAAY,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACxDA,YAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,YAAY,CAAC,SAAS,EAAE,yBAAyB,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9DA,YAAU,CAAC;IACP,QAAQ,CAAC,EAAE,CAAC;CACf,EAAE,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;;ACtC/C,IAAIA,YAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AACA;;;AAGA,AAAO,MAAM,cAAc,SAAS,aAAa,CAAC;CACjD;AACDD,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9CA,YAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;;;;AAIlD,AAAO,MAAM,YAAY,SAAS,aAAa,CAAC;CAC/C;AACDA,YAAU,CAAC;IACP,UAAU,CAAC,EAAE,EAAE,cAAc,CAAC;CACjC,EAAE,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9CA,YAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,YAAY,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;;AC5BlD,IAAI,UAAU,GAAG,CAACC,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IACnF,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,AAwBA;;;;;;;;;;AAUA,IAAI,QAAQ,GAAG,MAAM,QAAQ,SAAS,SAAS,CAAC;IAC5C,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE;QAC1B,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;KAC1B;;;;;;;;;IASD,WAAW,CAAC,qBAAqB,EAAE,gBAAgB;;IAEnD,QAAQ,EAAE,MAAM,EAAE;QACd,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,qBAAqB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KACvG;;;;;;;;;;IAUD,SAAS,CAAC,qBAAqB;;IAE/B,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE;QAChC,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,qBAAqB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;KACtG;;;;;;;;;;IAUD,SAAS,CAAC,mBAAmB;;IAE7B,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE;QAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;KAC1F;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,UAAU,CAAC;KACrB;;;;;IAKD,SAAS,GAAG;QACR,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG;YACjB,KAAK,EAAE,OAAO;YACd,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,YAAY;YACvB,WAAW,EAAE,cAAc;SAC9B,CAAC;QACF,IAAI,IAAI,CAAC,eAAe,IAAI,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YAC9D,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;SAClC;KACJ;;;;;;;;IAQD,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;QAC7C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;KAClE;;;;;IAKD,YAAY,GAAG;QACX,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;KAClC;;;;;;;IAOD,gBAAgB,CAAC,KAAK,EAAE;QACpB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC3C;;;;;;;;IAQD,MAAM,CAAC,YAAY,EAAE;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;KAClC;;;;;;;;;;;IAWD,cAAc,CAAC,UAAU,EAAE;QACvB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;;;;;;;IAOD,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAChD;IACD,cAAc,GAAG;;QAEb,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,YAAY,CAAC;QACjB,YAAY,GAAG,EAAE,CAAC;QAClB,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC;QACxC,IAAI,UAAU,CAAC;QACf,UAAU,GAAG,EAAE,CAAC;QAChB,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC5C,IAAI,cAAc,CAAC;QACnB,cAAc,GAAG,EAAE,CAAC;QACpB,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAU,CAAC,CAAC;QAC7D,QAAQ,CAAC,MAAM,EAAE,cAAc,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC3B;;;;;;;IAOD,KAAK,GAAG;QACJ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KAC5B;IACD,wBAAwB,CAAC,CAAC,EAAE;QACxB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,QAAQ,CAAC,CAAC,MAAM;gBACZ,KAAK,eAAe;oBAChB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,MAAM;gBACV,KAAK,aAAa;oBACd,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,MAAM;gBACV,KAAK,kBAAkB;oBACnB,IAAI,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC;oBAC9B,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrE,MAAM;gBACV,KAAK,oBAAoB;oBACrB,IAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC;oBAC5B,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;oBACnE,MAAM;gBACV,KAAK,WAAW;oBACZ,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;oBACpC,IAAI,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;oBACrD,IAAI,cAAc,KAAK,IAAI,EAAE;wBACzB,IAAI,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;wBACvC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;wBACzB,IAAI,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;wBACnC,IAAI,GAAG,GAAG,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;wBAC7C,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC;wBAC7B,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;qBAC9B;yBACI;wBACD,IAAI,CAAC,cAAc,EAAE,CAAC;qBACzB;oBACD,MAAM;gBACV,KAAK,SAAS;oBACV,IAAI,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;oBACvC,IAAI,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;oBAC/D,IAAI,iBAAiB,KAAK,IAAI,EAAE;wBAC5B,IAAI,MAAM,GAAG,iBAAiB,CAAC,QAAQ,CAAC;wBACxC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;wBACvB,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;wBAChC,IAAI,IAAI,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAC9C,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;wBAC9B,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC;qBAC/B;yBACI;wBACD,IAAI,CAAC,cAAc,EAAE,CAAC;qBACzB;aACR;SACJ;KACJ;;IAED,kBAAkB,CAAC,iBAAiB,EAAE;QAClC,IAAI,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC;QAC/C,IAAI,UAAU,KAAK,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3E,UAAU,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,EAAE;YACtC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACpD;QACD,OAAO,UAAU,CAAC;KACrB;;IAED,sBAAsB,CAAC,iBAAiB,EAAE;QACtC,IAAI,UAAU,GAAG,iBAAiB,CAAC,eAAe,CAAC;QACnD,IAAI,UAAU,KAAK,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3E,UAAU,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,EAAE;YACtC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;SACxD;QACD,OAAO,UAAU,CAAC;KACrB;IACD,cAAc,GAAG;QACb,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG;YACd,aAAa,EAAE,gBAAgB;YAC/B,WAAW,EAAE,cAAc;YAC3B,gBAAgB,EAAE,oBAAoB;YACtC,kBAAkB,EAAE,sBAAsB;YAC1C,SAAS,EAAE,WAAW;YACtB,OAAO,EAAE,SAAS;SACrB,CAAC;QACF,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,UAAU,YAAY,WAAW,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO;gBAC3F,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,YAAY,iBAAiB,CAAC,CAAC;QAC5G,IAAI,CAAC,eAAe,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACnE;;;;;IAKD,UAAU,GAAG;QACT,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACtE,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE;YACnD,SAAS,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;YACnD,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,SAAS,EAAE,SAAS;SACvB,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;SACpF;KACJ;;;;;;IAMD,eAAe,GAAG;QACd,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,OAAO,CAAC;SAClB;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAClC,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,SAAS;gBACjB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,aAAa;gBACrB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,OAAO;gBACf,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC;aAClC,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,SAAS;gBACjB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,SAAS;gBACjB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,QAAQ;gBAChB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAChF,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,QAAQ;gBAChB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC;aACpC,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,aAAa;gBACrB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,WAAW;gBACnB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,YAAY;gBACpB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YACpG,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACpC,OAAO,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,eAAe;gBACvB,IAAI,EAAE,CAAC,IAAI,CAAC;aACf,CAAC,CAAC;SACN;QACD,OAAO,OAAO,CAAC;KAClB;IACD,eAAe,CAAC,OAAO,EAAE;QACrB,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK;YACzB,IAAI,GAAG,CAAC,OAAO,EAAE;gBACb,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAC5C;YACD,OAAO,CAAC,EAAE,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,gBAAgB,CAAC,CAAC;SACnD,CAAC,CAAC;KACN;;;;;IAKD,YAAY,GAAG;QACX,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACtE;;;;;IAKD,MAAM,GAAG;QACL,aAAa,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAIG,OAAK,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAG,IAAIF,YAAU,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,CAACe,IAAW,CAAC,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,aAAa,GAAG,aAAa,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC,CAAC;QACnF,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,YAAY,CAAC,CAAC;QACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;YACzG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3C;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;YACtG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzC;QACD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB;IACD,eAAe,CAAC,IAAI,EAAE;QAClB,IAAI,IAAI,YAAY,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YAC7E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;aACI;YACD,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC3C;KACJ;;;;;;;;;;IAUD,kBAAkB,GAAG;QACjB,AACA,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5E,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1E,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACxE,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;KACvD;IACD,aAAa,CAAC,IAAI,EAAE;QAChB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;KAC/C;IACD,cAAc,GAAG;QACb,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK;YAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACnD,IAAI,CAAC,OAAO,CAACC,WAAkB,EAAE,IAAI,CAAC,CAAC;SAC1C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,KAAK;YAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACnD,IAAI,CAAC,OAAO,CAACC,aAAoB,EAAE,IAAI,CAAC,CAAC;SAC5C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,KAAK;YAC/B,IAAI,CAAC,OAAO,CAACC,YAAmB,EAAE,IAAI,CAAC,CAAC;YACxC,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,OAAO;aACV;YACD,IAAI,CAAC,MAAM,CAACA,YAAmB,EAAE,IAAI,CAAC,CAAC;SAC1C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,KAAK;YAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,CAACC,UAAiB,EAAE,IAAI,CAAC,CAAC;SACzC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,KAAK;YACrC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YACnC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;SAC3B,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,KAAK;YACnC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YACjC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;SAC3B,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,KAAK;YAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,CAACC,SAAgB,EAAE,IAAI,CAAC,CAAC;YACrC,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACjE,IAAI,GAAG,GAAG,SAAS,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;oBAC3D,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,KAAK,IAAI,CAAC;iBAC5C,CAAC,CAAC,MAAM,CAAC;gBACV,QAAQ,CAAC,6BAA6B,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aAC7D;YACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC9B,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,UAAU,IAAI,EAAE;YACxC,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAChD,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;gBAC3C,IAAI,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC;aACjC;iBACI,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,UAAU,YAAY,WAAW,EAAE;gBAC1G,IAAI,EAAE,GAAG,QAAQ,CAAC,UAAU,CAAC;gBAC7B,QAAQ,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC1D,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC;aACnC;YACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;gBACzB,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;;aAE1C;YACD,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;;YAEnC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBAClB,QAAQ,CAAC,OAAO,CAACb,eAAsB,EAAE,IAAI,CAAC,CAAC;aAClD;SACJ,CAAC;QACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;IACD,sBAAsB,GAAG;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,KAAK;YAC3B,IAAI,CAAC,OAAO,CAACc,QAAe,EAAE,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,CAACA,QAAe,EAAE,IAAI,CAAC,CAAC;aACtC;SACJ,CAAC;;;;;QAKF,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,KAAK;YAC3B,IAAI,CAAC,OAAO,CAACC,QAAe,EAAE,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAACA,QAAe,EAAE,IAAI,CAAC,CAAC;SACtC,CAAC;;;;;;;;;;;;;;;;;QAiBF,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK;YAC9B,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAACC,WAAkB,EAAE,IAAI,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,MAAM,CAACA,WAAkB,EAAE,IAAI,CAAC,CAAC;SACzC,CAAC;KACL;IACD,kBAAkB,GAAG;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,KAAK;YACpC,IAAI,CAAC,OAAO,CAACC,iBAAwB,EAAE,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAACA,iBAAwB,EAAE,IAAI,CAAC,CAAC;SAC/C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK;YAC9B,IAAI,WAAW,GAAG,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YACjD,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC3B,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC;oBACxD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;gBACjG,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;gBAChE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;aAClD;YACD,IAAI,CAAC,OAAO,CAACC,WAAkB,EAAE,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAACC,SAAgB,EAAE,IAAI,CAAC,CAAC;SACvC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,KAAK;YACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;aACrC;YACD,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,KAAK,IAAI,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,GAAG;oBAChE,IAAI,CAAC,MAAM,CAACC,UAAiB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;iBACjG;gBACD,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,cAAc,KAAK,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,KAAK,QAAQ,CAAC,EAAE;oBAC7H,IAAI,CAAC,MAAM,CAACC,QAAe,EAAE,IAAI,CAAC,CAAC;iBACtC;gBACD,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;oBAClC,IAAI,CAAC,MAAM,CAACC,SAAgB,EAAE,IAAI,CAAC,CAAC;iBACvC;aACJ;YACD,IAAI,CAAC,OAAO,CAAChB,cAAqB,EAAE,IAAI,CAAC,CAAC;SAC7C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,IAAI,EAAE;YACrC,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBACpC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACvC;iBACI;gBACD,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACjD;YACD,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC3C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,UAAU,IAAI,EAAE;YACtC,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBACpC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACvC;iBACI;gBACD,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACjD;YACD,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC1C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,KAAK;YACnC,IAAI,CAAC,MAAM,CAACiB,gBAAuB,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAACA,gBAAuB,EAAE,IAAI,CAAC,CAAC;SAC/C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,KAAK;YAClC,IAAI,CAAC,MAAM,CAACC,eAAsB,EAAE,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAACA,eAAsB,EAAE,IAAI,CAAC,CAAC;SAC9C,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,KAAK;YAChC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACtC,CAAC;KACL;;;;;IAKD,QAAQ,GAAG;QACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,QAAQ,CAAC,oBAAoB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACtE;;;;;IAKD,mBAAmB,GAAG;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE;YAC9F,IAAI,MAAM,CAAC;;;;YAIX,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;YAE5B,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;oBACnE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9B;aACJ;SACJ;KACJ;IACD,mBAAmB,GAAG;QAClB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,KAAK,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;QACvF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC;QACjE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC3C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC;QACzE,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI;YAC1B,KAAK,QAAQ;gBACT,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACnC,MAAM;YACV,KAAK,KAAK;gBACN,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACrB,MAAM;YACV,KAAK,MAAM;gBACP,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACrB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,MAAM;SACb;QACD,OAAO,IAAI,CAAC;KACf;;;;;IAKD,cAAc,GAAG;QACb,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnD,AACA,QAAQ,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAC5B,KAAK,QAAQ,CAAC;oBACd,KAAK,gBAAgB,CAAC,MAAM;wBACxB,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,2BAA2B;4BAChG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC/E,MAAM;oBACV;wBACI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5C;aACJ;YACD,OAAO,KAAK,CAAC;SAChB;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;;;;;IAKD,cAAc,GAAG;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAClE,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACnB,KAAK,QAAQ,CAAC;oBACd,KAAK,WAAW,CAAC,MAAM;wBACnB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACrB,MAAM;oBACV,KAAK,OAAO,CAAC;oBACb,KAAK,WAAW,CAAC,KAAK;wBAClB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpB,MAAM;oBACV,KAAK,WAAW,CAAC;oBACjB,KAAK,WAAW,CAAC,SAAS;wBACtB,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;wBACrD,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;4BACpD,UAAU,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,wBAAwB,EAAE,CAAC,CAAC;wBAC9E,MAAM;oBACV,KAAK,aAAa,CAAC;oBACnB,KAAK,WAAW,CAAC,WAAW;wBACxB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;wBACnD,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO;4BACtB,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,0BAA0B;yBACnG,CAAC,CAAC;wBACH,MAAM;oBACV;wBACI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC;aACJ;YACD,OAAO,KAAK,CAAC;SAChB;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;;;;;IAKD,cAAc,GAAG;QACb,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,cAAc,CAAC;QACnB,IAAI,UAAU,CAAC;QACf,IAAI,oBAAoB,GAAG,EAAE,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,UAAU,GAAG,EAAE,CAAC;YAChB,cAAc,GAAG,EAAE,CAAC;YACpB,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACrC,UAAU,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC7D;iBACI;gBACD,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;oBACrC,UAAU,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC7D;aACJ;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;YAClD,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzC;QACD,OAAO,oBAAoB,CAAC;KAC/B;;;;;;;IAOD,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE;QAChC,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,cAAc,GAAG,KAAK,CAAC;QAC3B,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;YACzB,QAAQ,IAAI;gBACR,KAAK,SAAS;oBACV,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC1C,MAAM;gBACV,KAAK,iBAAiB;oBAClB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC3B,MAAM;gBACV,KAAK,aAAa;oBACd,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACzC,MAAM;gBACV,KAAK,cAAc;oBACf,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAChE,cAAc,GAAG,IAAI,CAAC;oBACtB,MAAM;gBACV,KAAK,SAAS;oBACV,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC1C,MAAM;gBACV,KAAK,gBAAgB;oBACjB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC/C,MAAM;gBACV,KAAK,mBAAmB;oBACpB,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBAC1E,MAAM;gBACV,KAAK,cAAc;oBACf,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;oBAC3C,MAAM;gBACV,KAAK,mBAAmB;oBACpB,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACrD,MAAM;gBACV,KAAK,cAAc;oBACf,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAChE,MAAM;gBACV,KAAK,gBAAgB;oBACjB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACpE,MAAM;gBACV,KAAK,gBAAgB;oBACjB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC/C,MAAM;gBACV,KAAK,gBAAgB;oBACjB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACpE,MAAM;gBACV,KAAK,gBAAgB;oBACjB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC/C,MAAM;gBACV,KAAK,YAAY;oBACb,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC5D,MAAM;gBACV,KAAK,YAAY;oBACb,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,UAAU,YAAY,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;2BACrG,IAAI,CAAC,UAAU,CAAC,OAAO,YAAY,iBAAiB,CAAC,CAAC;oBAC7D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtC,IAAI,IAAI,CAAC,WAAW,EAAE;wBAClB,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;qBAChD;yBACI;wBACD,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;qBAC1C;oBACD,MAAM;gBACV,KAAK,OAAO;oBACR,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC7B,MAAM;gBACV,KAAK,mBAAmB;oBACpB,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;wBACf,IAAI,CAAC,WAAW,EAAE,CAAC;qBACtB;yBACI;wBACD,IAAI,CAAC,SAAS,EAAE,CAAC;qBACpB;oBACD,MAAM;gBACV,KAAK,oBAAoB;oBACrB,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,MAAM;gBACV,KAAK,WAAW;oBACZ,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACrC,MAAM;gBACV,KAAK,WAAW;oBACZ,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACrC,MAAM;gBACV,KAAK,QAAQ;oBACT,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;wBACzG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;qBAC3C;oBACD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC/B,MAAM;gBACV,KAAK,OAAO;oBACR,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;wBACtG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;qBACzC;oBACD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC7B,MAAM;gBACV,KAAK,cAAc;oBACf,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;oBAC3C,MAAM;gBACV,KAAK,aAAa;oBACd,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBACzC,MAAM;gBACV,KAAK,kBAAkB;oBACnB,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;oBACnD,MAAM;gBACV,KAAK,gBAAgB;oBACjB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC/C,MAAM;gBACV,KAAK,WAAW;oBACZ,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACrC,MAAM;gBACV,KAAK,iBAAiB;oBAClB,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;oBACjD,MAAM;gBACV,KAAK,eAAe;oBAChB,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;oBAC7C,MAAM;gBACV,KAAK,kBAAkB;oBACnB,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBACxE,MAAM;gBACV,KAAK,eAAe;oBAChB,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAClE,MAAM;gBACV,KAAK,kBAAkB;oBACnB,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBACnD,MAAM;gBACV,KAAK,iBAAiB;oBAClB,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACtE,MAAM;gBACV,KAAK,cAAc;oBACf,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI;yBACjF,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;wBACjE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;qBACzB;oBACD,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBACpD,MAAM;aACb;YACD,IAAI,cAAc,EAAE;gBAChB,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;SACJ;KACJ;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,OAAO,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa;YACpF,mBAAmB,EAAE,iBAAiB,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc;YACzG,aAAa,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,YAAY,CAAC,CAAC;QAC5F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;gBAClB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAC3B;SACJ;QACD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;;;;;IAMD,QAAQ,GAAG;QACP,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;;;;;IAMD,cAAc,GAAG;QACb,IAAI,SAAS,GAAG,CAAC,cAAc,EAAE,cAAc;YAC3C,gBAAgB,EAAE,SAAS,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QACvE,IAAI,eAAe,GAAG;YAClB,YAAY,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,WAAW,CAAC;YAC9G,cAAc,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,cAAc,EAAE,eAAe,CAAC;YAC9G,cAAc,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC;YACpD,YAAY,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE;SACtD,CAAC;QACF,IAAI,cAAc,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU;YACrF,iBAAiB,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QACjD,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;YACzB,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,KAAK,IAAI,GAAG,IAAI,eAAe,CAAC,KAAK,CAAC,EAAE;gBACpC,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;aAC7B;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KACvC;IACD,cAAc,CAAC,cAAc,EAAE,OAAO,EAAE;QACpC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;YACxB,IAAI,MAAM,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;gBAC5C,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aACvD;iBACI;gBACD,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;aAC/C;SACJ,CAAC,CAAC;KACN;IACD,cAAc,CAAC,cAAc,EAAE,MAAM,EAAE;QACnC,cAAc,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;YAC5B,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;YACnB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;SACtB,CAAC,CAAC;KACN;IACD,iBAAiB,CAAC,CAAC,EAAE;QACjB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE;YAC/B,OAAO;SACV;QACD,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QACtB,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YAC7C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;YACjD,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;SACtC;KACJ;;;;;IAKD,OAAO,GAAG;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KAC9B;;;;;IAKD,QAAQ,GAAG;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;KAC/B;;;;;;;IAOD,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;QACnB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC/C;;;;IAID,SAAS,GAAG;QACR,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;KACpC;;;;;;;IAOD,YAAY,CAAC,SAAS,EAAE,IAAI,EAAE;QAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACtD;;;;;IAKD,SAAS,GAAG;QACR,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;KACpC;;;;IAID,OAAO,GAAG;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;KAClC;;;;;IAKD,SAAS,CAAC,EAAE,EAAE;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;KACtC;;;;;IAKD,uBAAuB,GAAG;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAC9C;;;;;;;;IAQD,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;QAC5B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KAC7C;;;;;;;IAOD,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE;QACrB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;KACtC;;;;;;IAMD,QAAQ,CAAC,MAAM,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC1C;;;;;;;IAOD,gBAAgB,CAAC,QAAQ,EAAE,WAAW,EAAE;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;KAC5D;;;;;;IAMD,gBAAgB,CAAC,KAAK,EAAE;QACpB,OAAO,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;YAC3D,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;gBACtB,OAAO,IAAI,CAAC;aACf;YACD,OAAO,SAAS,CAAC;SACpB,CAAC,CAAC,CAAC,CAAC,CAAC;KACT;;;;;;IAMD,cAAc,CAAC,GAAG,EAAE;QAChB,OAAO,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;YAC3D,IAAI,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;YACD,OAAO,SAAS,CAAC;SACpB,CAAC,CAAC,CAAC,CAAC,CAAC;KACT;;;;;IAKD,mBAAmB,GAAG;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC1C;;;;;IAKD,gBAAgB,GAAG;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACvC;;;;;IAKD,qBAAqB,GAAG;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC5C;;;;;;;IAOD,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC9C;;;;;;;IAOD,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC9C;;;;;;IAMD,sBAAsB,CAAC,KAAK,EAAE;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;KAClD;;;;;;IAMD,sBAAsB,CAAC,KAAK,EAAE;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;KAClD;;;;;;IAMD,oBAAoB,CAAC,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;KAC9C;;;;;;IAMD,qBAAqB,CAAC,KAAK,EAAE;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACjD;;;;;;IAMD,mBAAmB,CAAC,GAAG,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;KAC7C;;;;;IAKD,UAAU,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;IACD,iBAAiB,CAAC,MAAM,EAAE;QACtB,IAAI,WAAW,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC;QAC9E,IAAI,UAAU,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,UAAU,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1C,UAAU,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;SACjD;QACD,IAAI,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;IAKD,UAAU,GAAG;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;KACjC;;;;;IAKD,eAAe,GAAG;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;KACtC;;;;;IAKD,WAAW,GAAG;QACV,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;gBAC7C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACvB;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;;;;;;IAMD,qBAAqB,GAAG;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;KACpC;;;;;IAKD,gBAAgB,GAAG;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACvC;;;;;IAKD,cAAc,GAAG;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;KACrC;;;;;;IAMD,aAAa,CAAC,KAAK,EAAE;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KACzC;;;;;;IAMD,UAAU,CAAC,MAAM,EAAE;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KACvC;;;;;;IAMD,mBAAmB,CAAC,KAAK,EAAE;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;KAC/C;;;;;IAKD,iBAAiB,GAAG;QAChB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE;YAC9B,IAAI,GAAG,CAAC,OAAO,EAAE;gBACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAClB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;;;;IAID,WAAW,GAAG;QACV,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B;;;;IAID,WAAW,GAAG;QACV,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B;;;;IAID,OAAO,GAAG;QACN,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KACvB;;;;IAID,cAAc,GAAG;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;KAC9B;;;;IAID,aAAa,GAAG;QACZ,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;KAC7B;;;;;;IAMD,qBAAqB,CAAC,MAAM,EAAE;QAC1B,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;QAC7B,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;YAC/C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;SACzC;aACI;YACD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;SACvC;KACJ;;;;;IAKD,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE;QACnB,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACpD,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QACrD,IAAI,CAAC,OAAO,CAACC,SAAgB,EAAE,IAAI,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO;SACV;QACD,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QAC3C,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE;YAC3C,IAAI,YAAY,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC9C,IAAI,CAAC,OAAO,CAACpB,QAAe,EAAE,YAAY,CAAC,CAAC;SAC/C;KACJ;IACD,wBAAwB,CAAC,GAAG,EAAE,MAAM,EAAE;QAClC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,IAAI,iBAAiB,CAAC,MAAM,CAAC,EAAE;YAC/G,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;gBACjC,OAAO,CAAC,CAAC,eAAe,CAAC;aAC5B,CAAC,CAAC;SACN;aACI,IAAI,iBAAiB,CAAC,MAAM,CAAC,EAAE;YAChC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC5D;QACD,OAAO,MAAM,CAAC;KACjB;;;;;IAKD,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE;QACrB,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACpD,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QACrD,IAAI,CAAC,OAAO,CAACqB,UAAiB,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO;SACV;QACD,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QAC7C,IAAI,YAAY,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,OAAO,CAACC,SAAgB,EAAE,YAAY,CAAC,CAAC;KAChD;;;;;IAKD,aAAa,CAAC,KAAK,EAAE;QACjB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,KAAK,EAAE;YAC9D,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;gBAClC,IAAI,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,EAAE;oBACxC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACrB;gBACD,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC;aACjD,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC7B;aACI;YACD,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACjC,IAAI,MAAM,GAAG,SAAS,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACrC;SACJ;KACJ;IACD,gBAAgB,CAAC,KAAK,EAAE;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;YACpC,QAAQ,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC3C,CAAC,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,EAAE;SAC5F,CAAC,CAAC;QACH,IAAI,OAAO,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAC7G,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC3C,OAAO,GAAG,CAAC;KACd;;;;;IAKD,eAAe,CAAC,KAAK,EAAE;QACnB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,KAAK,EAAE;YAC9D,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;gBAClC,IAAI,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,EAAE;oBACxC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACtB;gBACD,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC;aACjD,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC/B;aACI;YACD,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAClC,IAAI,OAAO,GAAG,SAAS,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC;SACJ;KACJ;;;;;IAKD,SAAS,GAAG;QACR,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;KACpC;;;;;IAKD,WAAW,GAAG;QACV,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;KACtC;IACD,iBAAiB,CAAC,MAAM,EAAE;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;YACpC,OAAO,CAAC,CAAC,aAAa,CAAC,aAAa,IAAI,MAAM,KAAK,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC;SACzF,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,KAAK,EAAE;YAC9D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;gBACxB,IAAI,CAAC,CAAC,eAAe,EAAE;oBACnB,CAAC,CAAC,QAAQ,GAAG,MAAM,KAAK,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC;iBACrD;aACJ,CAAC,CAAC;YACH,MAAM,KAAK,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/E;aACI;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,MAAM,KAAK,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/E;SACJ;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;IACD,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE;QACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,QAAQ,CAAC;QACb,IAAI,iBAAiB,CAAC,GAAG,CAAC,EAAE;YACxB,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;YACxB,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAC5B;aACI;YACD,QAAQ,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;YACrF,IAAI,CAAC,MAAM,CAACC,wBAA+B,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;SAC9F;aACI;YACD,IAAI,aAAa,CAAC;YAClB,IAAI,MAAM,KAAK,QAAQ,EAAE;gBACrB,aAAa,GAAG,WAAW,CAAC;gBAC5B,IAAI,CAAC,OAAO,EAAE;oBACV,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;iBAC1B;gBACD,IAAI,SAAS,GAAG,GAAG,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpE,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;oBAC9B,OAAO;iBACV;gBACD,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE,kBAAkB,CAAC,CAAC;gBAC1C,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,oBAAoB,CAAC,CAAC;aAClD;iBACI;gBACD,aAAa,GAAG,MAAM,CAAC;gBACvB,IAAI,CAAC,OAAO,EAAE;oBACV,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;iBAC3B;gBACD,IAAI,SAAS,GAAG,GAAG,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;oBAC9B,OAAO;iBACV;gBACD,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE,oBAAoB,CAAC,CAAC;gBAC5C,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,kBAAkB,CAAC,CAAC;aAChD;YACD,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACtC,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACxC,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,GAAG,MAAM,CAAC,KAAK,GAAG,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxH,IAAI,MAAM,KAAK,QAAQ,EAAE;oBACrB,IAAI,CAAC,MAAM,CAACxB,YAAmB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;iBACpF;qBACI;oBACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;oBAC/B,IAAI,CAAC,OAAO,CAACuB,SAAgB,EAAE,IAAI,CAAC,CAAC;iBACxC;aACJ;iBACI;gBACD,IAAI,YAAY,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;oBAC1D,QAAQ,CAAC,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ,EAAE;iBACjD,CAAC,CAAC;gBACH,IAAI,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC7C,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,GAAG,MAAM,CAAC,KAAK,GAAG,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,aAAa,CAAC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,MAAM,KAAK,QAAQ;wBACxE,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE;wBAC1E,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;qBAC/D;iBACJ;aACJ;SACJ;KACJ;IACD,mBAAmB,CAAC,IAAI,EAAE;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;YACjF,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC/B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,2CAA2C,CAAC,EAAE;gBACpE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;gBAChF,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC;gBAC/E,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC,KAAK,GAAG,OAAO,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5H,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;aAClC;SACJ;KACJ;;;;IAID,WAAW,GAAG;QACV,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;KAC1D;IACD,iBAAiB,CAAC,YAAY,EAAE;QAC5B,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;KACnC;;;;IAID,cAAc,GAAG;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO;SACV;QACD,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACrD;;;;;;;;;;;;;;;IAeD,cAAc,CAAC,SAAS,EAAE,cAAc,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,EAAE;QAC1H,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,cAAc,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,CAAC,CAAC;KAC3I;;;;;IAKD,cAAc,GAAG;QACb,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;KAC9B;;;;;;;;IAQD,yBAAyB,CAAC,KAAK,EAAE,gBAAgB,EAAE;QAC/C,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;KAChE;;;;;;;IAOD,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE;QACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KACxC;;;;;;IAMD,UAAU,CAAC,UAAU,EAAE;QACnB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KACpC;;;;;IAKD,cAAc,GAAG;QACb,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;KAC9B;;;;;;;IAOD,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE;QAC5B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KAC7C;;;;;IAKD,eAAe,GAAG;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;KACtC;;;;;IAKD,qBAAqB,GAAG;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC5C;;;;;IAKD,yBAAyB,GAAG;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC;KAChD;;;;;IAKD,kBAAkB,GAAG;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;KACzC;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;KACjF;CACJ,CAAC;AACF,UAAU,CAAC;IACP,QAAQ,CAAC,EAAE,CAAC;CACf,EAAE,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1C,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,QAAQ,CAAC,CAAC,CAAC;CACd,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;AACrD,UAAU,CAAC;IACP,QAAQ,CAAC,EAAE,CAAC;CACf,EAAE,QAAQ,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AACxC,UAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,QAAQ,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;IACP,QAAQ,CAAC,UAAU,CAAC;CACvB,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,OAAO,CAAC,EAAE,EAAE,gBAAgB,CAAC;CAChC,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,OAAO,CAAC,EAAE,EAAE,YAAY,CAAC;CAC5B,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,UAAU,CAAC;IACP,OAAO,CAAC,EAAE,EAAE,YAAY,CAAC;CAC5B,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,UAAU,CAAC,EAAE,EAAE,YAAY,CAAC;CAC/B,EAAE,QAAQ,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;IACP,OAAO,CAAC,EAAE,EAAE,YAAY,CAAC;CAC5B,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,OAAO,CAAC,EAAE,EAAE,cAAc,CAAC;CAC9B,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,OAAO,CAAC,EAAE,EAAE,cAAc,CAAC;CAC9B,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1C,UAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,QAAQ,CAAC,SAAS,CAAC;CACtB,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;IACP,QAAQ,EAAE;CACb,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;IACP,QAAQ,CAAC,MAAM,CAAC;CACnB,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AACzC,UAAU,CAAC;IACP,QAAQ,CAAC,MAAM,CAAC;CACnB,EAAE,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AACxC,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AACvC,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC;CACjB,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;IACP,QAAQ,CAAC,CAAC,CAAC,CAAC;CACf,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;IACP,OAAO,CAAC,EAAE,EAAE,iBAAiB,CAAC;CACjC,EAAE,QAAQ,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;IACP,QAAQ,CAAC,KAAK,CAAC;CAClB,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,wBAAwB,EAAE,KAAK,CAAC,CAAC,CAAC;AACzD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;AACrD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3D,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;AACtD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;IACP,KAAK,EAAE;CACV,EAAE,QAAQ,CAAC,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC;AACpD,QAAQ,GAAG,UAAU,CAAC;IAClB,qBAAqB;CACxB,EAAE,QAAQ,CAAC,CAAC;;AC9+Db;;;;AAIA,AAAO,MAAME,SAAO,CAAC;;;;IAIjB,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE;QAC5B,IAAI,CAAC,MAAM,CAACC,OAAW,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,SAAS,CAAC;KACpB;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;KACnE;IACD,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KACzD;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;IACD,aAAa,GAAG;QACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;KACtE;IACD,kBAAkB,GAAG;QACjB,IAAI,SAAS,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,eAAe,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,iBAAiB,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,IAAI,eAAe,KAAK,iBAAiB,EAAE;gBACvC,SAAS,GAAG,CAAC,CAAC;aACjB;SACJ;QACD,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,SAAS,CAAC;KAC3C;CACJ;;ACzDD;;;;AAIA,AAAO,MAAMC,QAAM,CAAC;;;;IAIhB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,MAAU,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;;;IAMD,cAAc,CAAC,KAAK,EAAE;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC1C;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,QAAQ,CAAC;KACnB;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;KAC3C;CACJ;;ACvCD;;GAEG;;ACFH;;GAEG;;ACFH;;GAEG;;ACAH;;;;AAIA,AAAO,MAAMC,QAAM,CAAC;;;;IAIhB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,MAAU,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,QAAQ,CAAC;KACnB;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;KAC/D;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC1D;;;;;IAKD,qBAAqB,CAAC,WAAW,EAAE;QAC/B,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,OAAO;gBACpD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,OAAO;gBAC3G,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,EAAE;gBACrD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aACjC;YACD,IAAI,OAAO,GAAG,SAAS,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAC7C,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;gBAC/C,QAAQ,CAAC,yBAAyB,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;aACxE;YACD,IAAI,MAAM,GAAG,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;gBAC5B,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;oBAChD,OAAO,CAAC,CAAC,QAAQ,KAAK,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC;iBACjD,CAAC,CAAC,CAAC,CAAC,CAAC;gBACN,QAAQ,CAAC,yBAAyB,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;aACxD;SACJ;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC5D,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;KACvE;IACD,eAAe,CAAC,MAAM,EAAE;QACpB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrG,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,EAAE;YAC5G,IAAI,iBAAiB,CAAC,MAAM,CAAC,EAAE;gBAC3B,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC9C,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACjC,MAAM,CAAC,uBAAuB,GAAG,IAAI,CAAC;qBACzC;oBACD,OAAO;iBACV;aACJ;iBACI;gBACD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC5F,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACpC;iBACJ;qBACI;oBACD,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC5F,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACpC;iBACJ;aACJ;SACJ;aACI;YACD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;gBAC5B,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,OAAO;uBACjD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,OAAO,EAAE;oBACzD,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC9C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;qBAChC;iBACJ;qBACI;oBACD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;iBAChC;aACJ;YACD,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpC;SACJ;KACJ;IACD,gBAAgB,CAAC,OAAO,EAAE;QACtB,IAAI,QAAQ,GAAG,SAAS,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAClD,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAClD,IAAI,OAAO,GAAG,SAAS,CAAC,cAAc,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM;iBAC3G,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,CAAC,EAAE;gBAC/G,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1C,OAAO,GAAG,IAAI,CAAC;aAClB;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,EAAE;gBAC5G,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;oBACvD,OAAO,GAAG,IAAI,CAAC;oBACf,MAAM;iBACT;aACJ;YACD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;gBAC/C,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;aACpD;SACJ;QACD,OAAO,OAAO,CAAC;KAClB;IACD,iBAAiB,GAAG;QAChB,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACxG,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3C,IAAI,MAAM,EAAE;gBACR,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvG,QAAQ,CAAC,aAAa,EAAE,MAAM,CAAC,WAAW,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9D;iBACI;gBACD,QAAQ,CAAC,aAAa,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3C;SACJ;KACJ;IACD,gBAAgB,CAAC,IAAI,EAAE;QACnB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC1B,IAAI,aAAa,CAAC;QAClB,KAAK,KAAK,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,EAAE,EAAE;YAC9B,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YACrD,IAAI,MAAM,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,yBAAyB,EAAE,aAAa,CAAC,CAAC,EAAE;gBACnG,IAAI,OAAO,GAAG,SAAS,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;gBACvD,QAAQ,CAAC,yBAAyB,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;gBACzD,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;aAChD;SACJ;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;KACrF;CACJ;;ACjLD;;;;AAIA,AAAO,MAAMC,aAAW,CAAC;;;;IAIrB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,WAAS,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,aAAa,CAAC;KACxB;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;KAClE;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC7D;IACD,sBAAsB,CAAC,YAAY,EAAE;QACjC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;KACnC;IACD,GAAG,CAAC,qBAAqB;;IAEzB,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE;QACvC,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACtC,IAAI,QAAQ,GAAG,MAAM,EAAE,CAAC;QACxB,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACnC,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACpC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;YACpC,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAC/E,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;gBACjB,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAClC,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;aACtC;YACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAACC,iBAAuB,EAAE,MAAM,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAC,CAAC;YACtF,IAAI,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACf;YACD,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;gBAC/B,IAAI,CAAC,0BAA0B,CAAC,qBAAqB,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC9F,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aACrI,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IACD,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE;QAC3B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,UAAU,KAAK,aAAa;eAClE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC5B,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;YACjC,KAAK,CAAC,SAAS,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;YAC7C,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACxD,KAAK,GAAG,SAAS,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;SAC7E;QACD,OAAO,KAAK,CAAC;KAChB;IACD,0BAA0B,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE;QACrD,IAAI,iBAAiB,CAAC,WAAW,CAAC,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC;iBACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC7F,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC;aACnD;SACJ;aACI;YACD,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;;YAE5B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;YAC3E,IAAI,IAAI,GAAG,MAAM,EAAE,CAAC;YACpB,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YAC9E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;;YAE1C,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YACxB,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;SAC7B;QACD,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,GAAG,MAAM,EAAE,GAAG,QAAQ,CAAC;QAC7D,QAAQ,CAAC,UAAU,GAAG,IAAI,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QACvD,OAAO,QAAQ,CAAC;KACnB;;;;;IAKD,kBAAkB,CAAC,IAAI,EAAE;QACrB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;YACvF,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACrB,IAAI,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,GAAG,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YACtD,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;KACnD;IACD,OAAO,GAAG;QACN,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/D;CACJ;;AC7HD;;;;AAIA,AAAO,MAAMC,WAAS,CAAC;;;;IAInB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,SAAO,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,WAAW,CAAC;KACtB;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;KACpE;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;KAC/D;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;IACD,oBAAoB,CAAC,YAAY,EAAE;QAC/B,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;KACnC;IACD,GAAG,CAAC,mBAAmB;;IAEvB,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE;QAC9B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACjC,IAAI,IAAI,GAAG,MAAM,EAAE,CAAC;QACpB,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAChC,IAAI,OAAO,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;YACpC,IAAI,EAAE,GAAG,OAAO,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACnE,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,EAAE;gBACV,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAClC,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAClC;YACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAACC,eAAqB,EAAE,MAAM,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC,CAAC;YAC9E,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACf;YACD,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;gBAC/B,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,KAAK,EAAE,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC7E,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;aACxH,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IACD,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE;QACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa;eAC1D,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,KAAK,CAAC,SAAS,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;YAC7C,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACxD,KAAK,GAAG,SAAS,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;SAC7E;QACD,OAAO,KAAK,CAAC;KAChB;IACD,uBAAuB,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE;QAC9C,IAAI,iBAAiB,CAAC,WAAW,CAAC,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG;mBACvF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC;aACnD;SACJ;aACI;YACD,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;;YAE5B,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;YAC1E,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YAC9E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;;YAE1C,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YACxB,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;kBAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;SAC7B;QACD,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;KACf;;;;;IAKD,gBAAgB,CAAC,IAAI,EAAE;QACnB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;YACvF,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACnC,IAAI,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,GAAG,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YACtD,KAAK,CAAC,eAAe,GAAG,GAAG,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;KACjD;CACJ;;AC1HD;;;;AAIA,AAAO,MAAMC,MAAI,CAAC;IACd,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,IAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAACd,wBAA+B,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;QACtF,IAAI,CAAC,MAAM,CAAC,EAAE,CAACrB,aAAoB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KAC/D;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACqB,wBAA+B,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACjF,IAAI,CAAC,MAAM,CAAC,GAAG,CAACrB,aAAoB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1D;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,OAAO,CAAC;KAClB;;;;;IAKD,OAAO,GAAG;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;KAC1C;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;;;;;IAMD,QAAQ,CAAC,MAAM,EAAE;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACjD;;;;;;IAMD,qBAAqB,CAAC,OAAO,EAAE;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;KAC/D;;;;IAID,yBAAyB,CAAC,UAAU,EAAE;QAClC,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,KAAK,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC;QAC7E,IAAI,GAAG,GAAG;YACN,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;YAC5B,GAAG,EAAE,UAAU,CAAC,GAAG;YACnB,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM;SACrC,CAAC;QACF,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;KACtE;IACD,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE;QACjC,IAAI,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE;gBACzB,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;oBAC7B,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,cAAc,CAAC;iBAChD,CAAC,CAAC;gBACH,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;aAC7D;SACJ;QACD,OAAO,UAAU,CAAC;KACrB;IACD,UAAU,CAAC,cAAc,EAAE;QACvB,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,KAAK,MAAM,EAAE;YAClD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;iBAC7D,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,KAAK,MAAM,CAAC;gBAC7G,aAAa,GAAG,OAAO,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YACpD,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC9B,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YACnC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YACxD,IAAI,IAAI,GAAG,IAAI,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;YAChC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC5D,cAAc,CAAC,MAAM,GAAG,UAAU,CAAC;SACtC;aACI;YACD,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAChD,IAAIoC,WAAQ,GAAG,IAAIC,WAAS,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;YACjG,IAAI,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,KAAK,EAAE,CAAC,KAAK,CAACD,WAAQ,CAAC,CAAC,CAAC;YAC3D,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;gBACnC,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;aACnD,CAAC,CAAC;YACH,cAAc,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;YACzC,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YACxD,IAAI,IAAI,GAAG,IAAI,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;YAChC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,EAAE,CAAC,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC;YAChC,cAAc,CAAC,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAClD;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;KACtD;CACJ;;ACrID;;;;AAIA,AAAO,MAAME,SAAO,CAAC;IACjB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,OAAI,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,SAAS,CAAC;KACpB;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAACnC,YAAmB,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;KACvE;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACA,YAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;KAClE;IACD,mBAAmB,CAAC,IAAI,EAAE;QACtB,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,OAAO;YAC1F,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,SAAS,EAAE;YAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,YAAY,EAAE;YAC7D,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;SAC3B;aACI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,cAAc,EAAE;YACpE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;SAC7B;KACJ;;;;;;IAMD,UAAU,GAAG;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;KACtD;;;;;;;;IAQD,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE;QACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KAC/D;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;CACJ;;ACrED;;;;AAIA,AAAO,MAAMoC,WAAS,CAAC;;;;IAInB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,SAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KAC1B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,SAAS,CAAC;KACpB;IACD,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;KACJ;;;;;IAKD,qBAAqB,CAAC,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE;QACtD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,YAAY,CAAC;QACjB,IAAI,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;QACxD,IAAI,UAAU,CAAC;QACf,UAAU,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,gBAAgB,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,UAAU,GAAG,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,UAAU,EAAE;gBACb,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACpC;SACJ;QACD,IAAI,aAAa,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,WAAW,CAAC;QAChB,WAAW,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QAC3D,IAAI,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;QAC/D,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;QACnD,IAAI,kBAAkB,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5C,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAChC,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;YAC3E,KAAK,IAAI,eAAe,GAAG,CAAC,EAAE,GAAG,GAAG,aAAa,EAAE,eAAe,IAAI,GAAG,EAAE,eAAe,EAAE,EAAE;gBAC1F,IAAI,IAAI,CAAC;gBACT,IAAI,GAAG,EAAE,CAAC;gBACV,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,EAAE,WAAW,GAAG,GAAG,EAAE,WAAW,EAAE,EAAE;oBAC5E,IAAI,KAAK,GAAG,iBAAiB,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC/E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC5F,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;iBACtB;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,gBAAgB,EAAE;oBAC9D,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjF,IAAI,GAAG,CAAC;oBACR,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,YAAY,CAAC,QAAQ,EAAE;wBAClE,GAAG,GAAG,CAAC,CAAC;wBACR,OAAO;qBACV,EAAE,CAAC,CAAC;oBACL,IAAI,YAAY,GAAG,GAAG,GAAG,kBAAkB,GAAG,eAAe,CAAC;oBAC9D,IAAI,aAAa,GAAG,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;oBAC7C,OAAO,aAAa,CAAC,YAAY,CAAC;oBAClC,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAC/C,QAAQ,CAAC,YAAY,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;oBAC5C,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;oBAC9C,QAAQ,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;oBACnC,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;oBAC9C,QAAQ,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBACrC,IAAI,MAAM,EAAE;wBACR,IAAI,YAAY,GAAG,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;wBAC3D,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC3B;oBACD,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;iBAC7C;qBACI;oBACD,SAAS;iBACZ;aACJ;YACD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC9B;QACD,OAAO,WAAW,CAAC;KACtB;IACD,qBAAqB,CAAC,UAAU,EAAE,QAAQ,EAAE;QACxC,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;QAChD,IAAI,MAAM,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC9C,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI;gBACpD,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,UAAU,KAAK,MAAM,EAAE;gBACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,QAAQ,GAAG,SAAS,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;gBACpD,IAAI,QAAQ,EAAE;oBACV,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;iBAChD;qBACI;oBACD,SAAS;iBACZ;aACJ;SACJ;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;KACvC;IACD,iBAAiB,CAAC,QAAQ,EAAE,OAAO,EAAE;QACjC,IAAI,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,mBAAmB,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACrD,IAAI,aAAa,GAAG,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;gBAC3F,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAClC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;gBAClB,IAAI,GAAG,KAAK,aAAa,EAAE;oBACvB,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACpF;qBACI;oBACD,SAAS;iBACZ;aACJ;SACJ;QACD,OAAO,QAAQ,CAAC;KACnB;IACD,gBAAgB,CAAC,aAAa,EAAE,WAAW,EAAE;QACzC,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,MAAM,CAAC;QACX,MAAM,GAAG,EAAE,CAAC;QACZ,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC;QACvE,aAAa,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAClG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,QAAQ,GAAG,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;QAClE,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC3C,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;QAChC,GAAG,CAAC,aAAa,EAAE,CAAC;QACpB,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC7D,IAAI,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;QAC/B,IAAI,UAAU,CAAC;QACf,KAAK,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC7B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;YACpB,UAAU,GAAG,IAAI,CAAC;YAClB,IAAI,GAAG,GAAG,aAAa,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC3D,IAAI,GAAG,GAAG,IAAI,KAAK,QAAQ,GAAG,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC;gBAC1D,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAClE,IAAI,IAAI,GAAG,aAAa,CAAC,UAAU,CAAC;YACpC,IAAI,KAAK,GAAG,IAAI,KAAK,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;SACxE,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,WAAW,GAAG,aAAa,CAAC,IAAI,EAAE;YAClC,SAAS,EAAE,WAAW;SACzB,CAAC,CAAC;QACH,cAAc,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzG,IAAI,KAAK,GAAG,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,YAAY,CAAC;QACjB,IAAI,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7C,YAAY,GAAG,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;YAC7C,OAAO,YAAY,CAAC;SACvB;aACI;YACD,OAAO,WAAW,CAAC,SAAS,CAAC;SAChC;KACJ;IACD,iBAAiB,CAAC,aAAa,EAAE,IAAI,EAAE;QACnC,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;YAC9D,OAAO,aAAa,CAAC;SACxB;QACD,IAAI,GAAG,CAAC;QACR,QAAQ,IAAI;YACR,KAAK,QAAQ;gBACT,GAAG,GAAG,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC;gBAChC,MAAM;YACV,KAAK,UAAU;gBACX,GAAG,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;gBACpD,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;gBAC9C,MAAM;SACb;QACD,OAAO,GAAG,CAAC;KACd;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;CACJ;;ACxMD;;;;AAIA,AAAO,MAAMC,aAAW,CAAC;IACrB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,WAAK,CAAC,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;KACnE;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC9D;IACD,eAAe,CAAC,IAAI,EAAE;QAClB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,2BAA2B,CAAC,CAAC;QACpG,IAAI,MAAM,EAAE;YACR,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,KAAK,KAAK,EAAE;gBACrD,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aACjC;iBACI;gBACD,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;aAClC;SACJ;KACJ;IACD,gBAAgB,CAAC,IAAI,EAAE;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,OAAO,EAAE;YACtD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,YAAY,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACpF,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;SAC3B;KACJ;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,aAAa,CAAC;KACxB;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;;;;IAKD,cAAc,GAAG;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;KAC9D;CACJ;;AC9DD;;;;AAIA,AAAO,MAAMC,MAAI,CAAC;;;;IAId,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,IAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;;;;QAIlE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,MAAM,CAAC;KACjB;;;;IAID,gBAAgB,GAAG;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAChC,UAAiB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,EAAE,CAACD,SAAgB,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,EAAE,CAACE,QAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,EAAE,CAACJ,iBAAwB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,MAAM,CAAC,EAAE,CAACH,QAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,EAAE,CAACE,WAAkB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAACqC,UAAiB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,EAAE,CAACtC,QAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAACuC,SAAgB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,yBAAyB,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;;;;;;;;KAQjF;;;;IAID,mBAAmB,GAAG;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAClC,UAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACD,SAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACE,QAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACJ,iBAAwB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,GAAG,CAACH,QAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACE,WAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAACqC,UAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,GAAG,CAACtC,QAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAACuC,SAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;KAC5E;;;;;;IAMD,OAAO,GAAG;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;;;IAID,mBAAmB,CAAC,IAAI,EAAE;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;KACzD;IACD,iBAAiB,CAAC,IAAI,EAAE;QACpB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC;QACpG,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY;YAC7F,MAAM,CAAC,YAAY,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YACtE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,EAAE;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;YAC1E,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;SACpC;KACJ;IACD,kBAAkB,CAAC,IAAI,EAAE;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACvE,IAAI,YAAY,GAAG,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3E,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACnC;IACD,UAAU,CAAC,IAAI,EAAE;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/B;KACJ;IACD,QAAQ,CAAC,IAAI,EAAE;QACX,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YACxF,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,EAAE;YAClE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACV;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,EAAE;YAC1C,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;gBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACxB;iBACI,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACxB;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;aACnC;SACJ;;;;KAIJ;IACD,kBAAkB,CAAC,OAAO,EAAE;QACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACpD,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,eAAe,CAAC;YACzD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,GAAG,KAAK,EAAE,SAAS,GAAG,MAAM,EAAE,SAAS,GAAG,QAAQ,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC,CAAC;YAC9H,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,GAAG,QAAQ,EAAE,SAAS,GAAG,QAAQ,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC,CAAC;SAChH;KACJ;IACD,WAAW,CAAC,CAAC,EAAE;QACX,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,EAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC;gBAChC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;gBAC9C,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;gBAC9E,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;aACrE,CAAC,CAAC;YACH,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;;;;;;;;;;;;;;;;;;KAkBJ;IACD,QAAQ,CAAC,IAAI,EAAE;QACX,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,EAAE;YAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAC/B,IAAI,QAAQ,CAAC;YACb,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAAC;YACxD,IAAI,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;oBACtD,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;wBACpD,QAAQ,GAAG,CAAC,CAAC;wBACb,OAAO;qBACV;iBACJ,CAAC,CAAC;aACN;iBACI;gBACD,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;aAC3B;YACD,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE;gBAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1D;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAC9C,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;gBACzD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;gBAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;YACD,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YAChC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,CAAC;YAClD,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC,CAAC;YACtF,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1E,IAAI,QAAQ,GAAG;gBACX,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO;gBACvF,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI;aAChE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAChD,cAAqB,EAAE,QAAQ,CAAC,CAAC;SACxD;KACJ;IACD,QAAQ,CAAC,IAAI,EAAE;QACX,IAAI,QAAQ,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7B,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC5C,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE;gBACnF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1D;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;gBACrD,QAAQ,GAAG,QAAQ,CAAC;aACvB;iBACI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO;mBAC7G,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE;gBAC5B,QAAQ,GAAG,OAAO,CAAC;;gBAEnB,KAAK,IAAI,mBAAmB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;aACvD;YACD,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO;mBACtF,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,CAAC,CAAC,EAAE;gBAC1D,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;oBACtB,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC3B;gBACD,IAAI,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC;gBAC7C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,EAAE;oBACrF,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;oBACjF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACpC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;qBACtB;oBACD,QAAQ,CAAC,YAAY,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACnE;gBACD,eAAe,CAAC,KAAK,EAAE,CAAC;aAC3B;SACJ;KACJ;;;;;;;;;;;;;;;;;;;IAmBD,SAAS,CAAC,IAAI,EAAE;QACZ,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;YAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO;SACV;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;YAC9E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO;SACV;QACD,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YACxF,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,EAAE;YAClE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,OAAO;SACV;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;YAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D;SACJ;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACvD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SACrG;QACD,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;;;;;;;;KASlC;IACD,uBAAuB,CAAC,IAAI,EAAE;QAC1B,IAAI,IAAI,CAAC,sBAAsB,KAAK,IAAI,EAAE;YACtC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC;SACzE;KACJ;IACD,YAAY,CAAC,IAAI,EAAE;QACf,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,QAAQ,GAAG,IAAI,CAAC;;;YAGpB,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC3D,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;YAC3D,IAAI,KAAK,CAAC;YACV,IAAI,SAAS,CAAC;YACd,IAAI,SAAS,CAAC;YACd,IAAI,cAAc,CAAC;YACnB,IAAI,UAAU,CAAC;YACf,IAAI,eAAe,CAAC;YACpB,IAAI,WAAW,CAAC,MAAM,EAAE;gBACpB,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;gBAC5C,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;gBAChD,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACjE,eAAe,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC7E,IAAI,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,EAAE;oBAC1C,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC;iBACtE;gBACD,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC;aACzD;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,KAAK,EAAE;gBACnD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;oBACrD,QAAQ,GAAG,QAAQ,CAAC;iBACvB;qBACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;oBAC1D,QAAQ,GAAG,OAAO,CAAC;oBACnB,KAAK,IAAI,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;iBACtE;qBACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;oBAC1D,QAAQ,GAAG,OAAO,CAAC;oBACnB,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE;wBACzB,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC7D,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC;wBACjD,OAAO,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC;wBACrC,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;qBACrD;oBACD,KAAK,IAAI,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;oBACnE,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;oBACxB,IAAI,IAAI,CAAC,eAAe,EAAE;wBACtB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC;wBAC/C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;4BACtC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;yBAC7D;qBACJ;iBACJ;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;oBAC5G,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,KAAK,EAAE;wBAClC,KAAK,CAAC,cAAc,GAAG,cAAc,CAAC;wBACtC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;wBAC1C,OAAO,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC;wBACrC,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;qBACrD;oBACD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;oBACpB,IAAI,IAAI,CAAC,eAAe,EAAE;wBACtB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,eAAe,CAAC;wBACrD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;4BACtC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;yBAC7D;qBACJ;iBACJ;gBACD,IAAI,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE;oBAC7C,IAAI,CAAC,KAAK,GAAG,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;iBAC1D;gBACD,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,QAAQ,EAAE;oBACtD,IAAI,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,YAAY,WAAW;wBAChE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC/E,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;iBAClC;aACJ;;YAED,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;YAC9B,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;YACxB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;SACnB;QACD,OAAO,IAAI,CAAC;KACf;IACD,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE;QACzB,IAAI,KAAK,CAAC;QACV,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAClE,KAAK,GAAG,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QAClC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QAC5B,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc;YAC3C,KAAK,KAAK;gBACN,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACxB,MAAM,GAAG,IAAI,CAAC;gBACd,MAAM;YACV,KAAK,QAAQ;gBACT,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrB,MAAM,GAAG,IAAI,CAAC;gBACd,MAAM;YACV,KAAK,OAAO;gBACR,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBACjD,MAAM;YACV,KAAK,OAAO,CAAC;YACb,KAAK,OAAO;gBACR,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7C,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,CAAC,EAAE;oBAC3B,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACxB,MAAM,GAAG,IAAI,CAAC;iBACjB;SACR;QACD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;KAC3C;IACD,UAAU,CAAC,OAAO,EAAE,UAAU,EAAE;QAC5B,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC5B,IAAI,MAAM,KAAK,MAAM,EAAE;YACnB,MAAM,GAAG,MAAM,CAAC;SACnB;QACD,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC;QACN,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,YAAY,WAAW;YACxD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACpE,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAClE,IAAI,MAAM,KAAK,KAAK,EAAE;YAClB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC/C,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACrB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC1B;QACD,IAAI,KAAK,YAAY,KAAK,EAAE;YACxB,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;SACrC;aACI;YACD,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,MAAM,KAAK,MAAM,KAAK,KAAK;aAC3B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,QAAQ,CAAC,CAAC,EAAE;YAC9G,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACpB,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;oBAClB,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;wBAC3C,IAAI,MAAM,KAAK,QAAQ,EAAE;4BACrB,IAAI,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;4BAC9B,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACtB,IAAI,IAAI,CAAC,eAAe,EAAE;gCACtB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE;oCAC9D,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC9H,IAAI,YAAY,GAAG,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;oCAC1E,KAAK,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;wCAC/C,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;4CAC/E,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4CAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gDACtB,UAAU,CAAC,eAAe,GAAG,KAAK,CAAC;gDACnC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;6CACjD;4CACD,MAAM;yCACT;qCACJ;iCACJ;gCACD,MAAM;6BACT;yBACJ;6BACI;4BACD,IAAI,MAAM,KAAK,MAAM,EAAE;gCACnB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC9B,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,EAAE;wCAC7G,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qCACnD;iCACJ;6BACJ;iCACI,IAAI,MAAM,KAAK,KAAK,EAAE;gCACvB,IAAI,KAAK,CAAC;gCACV,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;oCACrD,IAAI,IAAI,CAAC,eAAe,EAAE;wCACtB,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;wCAC/E,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;qCAC3C;yCACI;wCACD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;4CACvD,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;yCAC9C;wCACD,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wCACzD,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;qCAClD;iCACJ;qCACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;oCAC1D,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;iCAC3C;qCACI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oCACxB,KAAK,GAAG,CAAC,CAAC;oCACV,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;iCAC3C;qCACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;oCAC1D,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;iCACvC;6BACJ;4BACD,MAAM;yBACT;qBACJ;yBACI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;wBAChE,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC,EAAE;4BACxH,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;yBAClD;qBACJ;iBACJ;aACJ;SACJ;QACD,IAAI,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,EAAE;YACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,YAAY,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,sBAAsB,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACnG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;SACtC;KACJ;IACD,kBAAkB,CAAC,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE;QAClF,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC;QAC5B,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAClB,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,YAAY,CAAC,GAAG,CAAC;iBACzC,IAAI,CAAC,eAAe,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE;gBAChH,IAAI,MAAM,KAAK,MAAM,EAAE;oBACnB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAClC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,EAAE;4BACjH,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBACpD;qBACJ;oBACD,MAAM;iBACT;qBACI,IAAI,MAAM,KAAK,KAAK,EAAE;oBACvB,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;wBACrD,IAAI,IAAI,CAAC,eAAe,EAAE;4BACtB,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;4BACnF,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;4BAC5C,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;yBACtD;6BACI;4BACD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;gCAC3D,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;6BAClD;4BACD,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BAC7D,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;yBACtD;qBACJ;yBACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;wBAC1D,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;qBAC3C;yBACI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;wBAC1D,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;qBAC/C;iBACJ;qBACI;oBACD,IAAI,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC5C,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;wBACtB,UAAU,GAAG,IAAI,CAAC;qBACrB;iBACJ;aACJ;iBACI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;gBACpE,IAAI,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC,EAAE;oBACzH,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;iBACtD;aACJ;SACJ;QACD,OAAO,UAAU,CAAC;KACrB;IACD,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;QACxC,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC9D,IAAI,KAAK,CAAC;QACV,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,EAAE;YACvD,KAAK,GAAG,CAAC,CAAC;YACV,OAAO;SACV,EAAE,CAAC,CAAC;QACL,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,IAAI,MAAM,KAAK,KAAK,EAAE;YAClB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC;YAC9B,IAAI,YAAY,GAAG,KAAK,GAAG,KAAK,GAAG,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBACxC,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC;aAC5B;YACD,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;gBAClD,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aAC7C;YACD,IAAI,IAAI,CAAC,eAAe,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;oBAClD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;iBACzC;gBACD,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;oBAClD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;iBAC1D;aACJ;SACJ;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACzC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;YAC5F,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;KAC7E;;;;;IAKD,gBAAgB,GAAG;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;KACzD;;;;IAID,WAAW,GAAG;QACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;KAC7C;CACJ;;ACpmBD;;;;AAIA,AAAO,MAAMiD,eAAa,CAAC;IACvB,WAAW,CAAC,MAAM,EAAE;QAChB,IAAI,CAAC,MAAM,CAACC,aAAO,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;;IAKD,aAAa,GAAG;QACZ,OAAO,eAAe,CAAC;KAC1B;;;;;;IAMD,OAAO,GAAG;;KAET;CACJ;;ACzBD;;GAEG;;ACFH;;GAEG;;ACFH;;GAEG;;;;"}