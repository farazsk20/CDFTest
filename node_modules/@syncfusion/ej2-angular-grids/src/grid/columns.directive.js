var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';
import { Template } from '@syncfusion/ej2-angular-base';
var input = ['allowEditing', 'allowFiltering', 'allowGrouping', 'allowReordering', 'allowResizing', 'allowSorting', 'clipMode', 'columns', 'commands', 'customAttributes', 'dataSource', 'defaultValue', 'disableHtmlEncode', 'displayAsCheckBox', 'edit', 'editTemplate', 'editType', 'enableGroupByFormat', 'field', 'filter', 'filterBarTemplate', 'filterTemplate', 'foreignKeyField', 'foreignKeyValue', 'format', 'formatter', 'headerTemplate', 'headerText', 'headerTextAlign', 'hideAtMedia', 'isFrozen', 'isIdentity', 'isPrimaryKey', 'lockColumn', 'maxWidth', 'minWidth', 'showColumnMenu', 'showInColumnChooser', 'sortComparer', 'template', 'textAlign', 'type', 'uid', 'validationRules', 'valueAccessor', 'visible', 'width'];
var outputs = [];
/**
 * `e-column` directive represent a column of the Angular Grid.
 * It must be contained in a Grid component(`ejs-grid`).
 * ```html
 * <ejs-grid [dataSource]='data' allowPaging='true' allowSorting='true'>
 *   <e-columns>
 *    <e-column field='ID' width='100'></e-column>
 *    <e-column field='name' headerText='Name' width='100'></e-column>
 *   </e-columns>
 * </ejs-grid>
 * ```
 */
var ColumnDirective = /** @class */ (function (_super) {
    __extends(ColumnDirective, _super);
    function ColumnDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        _this.registerEvents(outputs);
        return _this;
    }
    ColumnDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ejs-grid>e-columns>e-column',
                    inputs: input,
                    outputs: outputs,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    ColumnDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    ColumnDirective.propDecorators = {
        'template': [{ type: ContentChild, args: ['template',] },],
        'headerTemplate': [{ type: ContentChild, args: ['headerTemplate',] },],
        'commandsTemplate': [{ type: ContentChild, args: ['commandsTemplate',] },],
        'filter_itemTemplate': [{ type: ContentChild, args: ['filterItemTemplate',] },],
        'editTemplate': [{ type: ContentChild, args: ['editTemplate',] },],
        'filterTemplate': [{ type: ContentChild, args: ['filterTemplate',] },],
    };
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], ColumnDirective.prototype, "template", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], ColumnDirective.prototype, "headerTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], ColumnDirective.prototype, "commandsTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], ColumnDirective.prototype, "filter_itemTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], ColumnDirective.prototype, "editTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], ColumnDirective.prototype, "filterTemplate", void 0);
    return ColumnDirective;
}(ComplexBase));
export { ColumnDirective };
/**
 * Column Array Directive
 * @private
 */
var ColumnsDirective = /** @class */ (function (_super) {
    __extends(ColumnsDirective, _super);
    function ColumnsDirective() {
        return _super.call(this, 'columns') || this;
    }
    ColumnsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ejs-grid>e-columns',
                    queries: {
                        children: new ContentChildren(ColumnDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    ColumnsDirective.ctorParameters = function () { return []; };
    return ColumnsDirective;
}(ArrayBase));
export { ColumnsDirective };
//# sourceMappingURL=columns.directive.js.map