{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, SvgRenderer, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n * Internal rendering of text\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n        !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n            (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme) {\n        case 'BootstrapDark':\n        case 'FabricDark':\n        case 'MaterialDark':\n        case 'Highcontrast':\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                totalRect = this.treemap.totalRect;\n            }\n            this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n            this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            renderText = textFormatter(format, item['data'], this.treemap) || item['name'];\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? '[+] ' + renderText : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] :\n                        !isNullOrUndefined(treemap.colorValuePath) ?\n                            parentData[i]['data'][treemap.colorValuePath] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer, isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? this.levels.length : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        // EventHandler.remove(this.element, 'dblclick', this.doubleClick);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        //EventHandler.add(this.element, 'dblclick', this.doubleClick, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = { cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e };\n            this.trigger(itemClick, eventArgs);\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var startEvent;\n        var endEvent;\n        var targetId = targetEle.id;\n        var totalRect;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var templateID = this.element.id + '_Label_Template_Group';\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (item['levelOrderName'] === this.drilledItems[i]['name']) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1) {\n                            item['isDrilled'] = true;\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = { cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle };\n                this.trigger(drillStart, startEvent);\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    if (document.getElementById(templateID)) {\n                        document.getElementById(templateID).remove();\n                    }\n                    this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                    this.layout.renderLayoutItems(newDrillItem);\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom')\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var spacing = 10;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || this.treemap.themeStyle.legendTextColor, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (legend.position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (legend.position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (legend.position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (legend.position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (legend.position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                        this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs);\n                if (!tootipArgs.cancel) {\n                    this.svgTooltip = new Tooltip({\n                        enable: true,\n                        header: '',\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        content: tootipArgs.options['text'],\n                        shapes: [],\n                        location: tootipArgs.options['location'],\n                        palette: [markerFill],\n                        areaBounds: this.treemap.areaRect,\n                        textStyle: tootipArgs.options['textStyle']\n                    });\n                    this.svgTooltip.appendTo(tooltipEle);\n                }\n                else {\n                    this.removeTooltip();\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","renderTextElement","options","color","parent","isMinus","tspanElement","renderOptions","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","renderer","SvgRenderer","htmlObject","createText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","split","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNullOrUndefined","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","mouseMove","legendItemRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","getDrilldownData","extend","calculateLayoutItems","renderLayoutItems","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","childItems","templateGroup","className","isLeafItem","labelFormat","headerFormat","showLabels","enableDrillDown","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","texts","maxNumber","collectionLength","stringText","splice","getSaturatedColor","itemFill","itemOpacity","option","equalColorValuePath","rangeColorValuePath","palette","colorValuePath","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","drilledItems","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","themeStyle","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","legendSettings","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","_loop_1","this_1","parseFloat","EventHandler","clickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","mouseDown","notify","moveArgs","drillMouseMove","cursor","startEvent","endEvent","targetEle","newDrillItem","layoutID","templateID","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","_a","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","spacing","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","translate","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","legendFillColor","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}