{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, SvgRenderer, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n * Internal rendering of text\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '_');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('_')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n        !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n            (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            colorMapping[i].value = !isNullOrUndefined(colorMapping[i].value) ? colorMapping[i].value.toString() : colorMapping[i].value;\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme) {\n        case 'BootstrapDark':\n        case 'FabricDark':\n        case 'MaterialDark':\n        case 'Highcontrast':\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('#808080')\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                totalRect = this.treemap.totalRect;\n            }\n            this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n            this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            renderText = textFormatter(format, item['data'], this.treemap) || item['name'];\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? '[+] ' + renderText : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('_')[0]) {\n                    itemFill = treemap.palette.length > 0 ? treemap.palette[i % treemap.palette.length] :\n                        !isNullOrUndefined(treemap.colorValuePath) ?\n                            parentData[i]['data'][treemap.colorValuePath] : itemFill;\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer, isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '_' + childData[j]['name']) + '';\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? this.levels.length : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '_');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('_');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        // EventHandler.remove(this.element, 'dblclick', this.doubleClick);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        //EventHandler.add(this.element, 'dblclick', this.doubleClick, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = { cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e };\n            this.trigger(itemClick, eventArgs);\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var startEvent;\n        var endEvent;\n        var targetId = targetEle.id;\n        var totalRect;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var templateID = this.element.id + '_Label_Template_Group';\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (item['levelOrderName'] === this.drilledItems[i]['name']) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1) {\n                            item['isDrilled'] = true;\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = { cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle };\n                this.trigger(drillStart, startEvent);\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    if (document.getElementById(templateID)) {\n                        document.getElementById(templateID).remove();\n                    }\n                    this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                    this.layout.renderLayoutItems(newDrillItem);\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom')\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var spacing = 10;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || this.treemap.themeStyle.legendTextColor, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (legend.position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (legend.position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (legend.position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (legend.position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (legend.position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (legend.position === 'Top' || legend.position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                        this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs);\n                if (!tootipArgs.cancel) {\n                    this.svgTooltip = new Tooltip({\n                        enable: true,\n                        header: '',\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        content: tootipArgs.options['text'],\n                        shapes: [],\n                        location: tootipArgs.options['location'],\n                        palette: [markerFill],\n                        areaBounds: this.treemap.areaRect,\n                        textStyle: tootipArgs.options['textStyle']\n                    });\n                    this.svgTooltip.appendTo(tooltipEle);\n                }\n                else {\n                    this.removeTooltip();\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","renderTextElement","options","color","parent","isMinus","tspanElement","renderOptions","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","renderer","SvgRenderer","htmlObject","createText","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","split","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","replace","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNullOrUndefined","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","getDrilldownData","extend","calculateLayoutItems","renderLayoutItems","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","childItems","templateGroup","className","isLeafItem","labelFormat","headerFormat","showLabels","enableDrillDown","labelStyle","headerStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","texts","maxNumber","collectionLength","stringText","splice","getSaturatedColor","itemFill","itemOpacity","option","equalColorValuePath","rangeColorValuePath","palette","colorValuePath","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","drilledItems","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","themeStyle","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","legendSettings","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","this_1","parseFloat","EventHandler","clickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","mouseDown","notify","moveArgs","drillMouseMove","cursor","startEvent","endEvent","targetEle","newDrillItem","layoutID","templateID","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","_a","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","spacing","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","translate","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","legendFillColor","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}