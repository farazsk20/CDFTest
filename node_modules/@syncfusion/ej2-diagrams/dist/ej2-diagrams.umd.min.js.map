{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/utility/uml-util.js","../src/diagram/interaction/container-interaction.js","../src/diagram/ruler/ruler.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/interaction/selector.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n            actualObject.wrapper.children[0].canMeasurePath = true;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\nimport { ElementAction } from '../../enum/enum';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate && (!avoidDrawSelector(this.rendererActions))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                obj.width = helperObject.width;\n                obj.height = helperObject.height;\n            }\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            var stackPanel = selector.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","topRight","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","avoidDrawSelector","rendererActions","RendererAction","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","ReadOnly","verticalAlignment","horizontalAlignment","initObject","nodes","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","maxHeight","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rect","Rect","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","None","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","canMeasure","textNodes","textWrapBounds","imageSource","stretch","measureImage","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","updatePortEdges","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","alignElement","updateConnectorEdges","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","UndoRedo","innerNode","zIndex","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","updateGridContainer","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","removeChildNodes","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}