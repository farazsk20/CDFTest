import { createElement } from '@syncfusion/ej2-base';
import { TreeView } from '@syncfusion/ej2-navigations';
/**
 * BookmarkView module
 */
var BookmarkView = /** @class */ (function () {
    /**
     * @private
     */
    function BookmarkView(pdfViewer, pdfViewerBase) {
        var _this = this;
        this.nodeClick = function (args) {
            var bookid = Number(args.nodeData.id);
            var proxy = _this;
            var pageIndex = _this.bookmarksDestination.bookMarkDestination[bookid].PageIndex;
            var Y = _this.bookmarksDestination.bookMarkDestination[bookid].Y;
            _this.goToBookmark(pageIndex, Y);
            return false;
        };
        this.pdfViewer = pdfViewer;
        this.pdfViewerBase = pdfViewerBase;
    }
    /**
     * @private
     */
    BookmarkView.prototype.createRequestForBookmarks = function () {
        var _this = this;
        var proxy = this;
        var request = new XMLHttpRequest();
        // tslint:disable-next-line:max-line-length
        var jsonObject = { hashId: this.pdfViewerBase.hashId };
        request.open('POST', proxy.pdfViewer.serviceUrl + '/Bookmarks');
        request.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
        request.responseType = 'json';
        request.send(JSON.stringify(jsonObject));
        // tslint:disable-next-line
        request.onreadystatechange = function (event) {
            if (request.readyState === 4 && request.status === 200) {
                _this.pdfViewerBase.navigationPane.disableBookmarkButton();
                // tslint:disable-next-line
                var data = event.currentTarget.response;
                if (data) {
                    if (typeof data !== 'object') {
                        data = JSON.parse(data);
                    }
                    _this.bookmarks = { bookMark: data.Bookmarks };
                    _this.bookmarksDestination = { bookMarkDestination: data.BookmarksDestination };
                }
                if (_this.bookmarks == null) {
                    _this.pdfViewerBase.navigationPane.disableBookmarkButton();
                }
                else {
                    _this.pdfViewerBase.navigationPane.enableBookmarkButton();
                }
            }
        };
        // tslint:disable-next-line
        request.onerror = function (event) {
            _this.pdfViewerBase.openNotificationPopup();
            proxy.pdfViewer.fireAjaxRequestFailed(request.status, request.statusText);
        };
    };
    /**
     * @private
     */
    BookmarkView.prototype.renderBookmarkcontent = function () {
        if (this.bookmarkView != null) {
            this.bookmarkView.parentElement.removeChild(this.bookmarkView);
        }
        this.bookmarkView = createElement('div', { id: this.pdfViewer.element.id + '_bookmark_view', className: 'e-pv-bookmark-view' });
        this.pdfViewerBase.navigationPane.sideBarContent.appendChild(this.bookmarkView);
        // tslint:disable-next-line:max-line-length
        var bookmarkIconView = createElement('div', { id: this.pdfViewer.element.id + '_bookmark_iconview', className: 'e-pv-bookmark-icon-view' });
        // tslint:disable-next-line:max-line-length
        var bookmarkIcon = createElement('span', { id: this.pdfViewer.element.id + '_bookmark_icon', className: 'e-pv-bookmark-icon e-pv-icon' });
        var bookmarkTitle = createElement('div', { id: this.pdfViewer.element.id + '_bookmark_Title', className: 'e-pv-bookmark-Title' });
        bookmarkTitle.innerText = '${Title}';
        bookmarkIconView.appendChild(bookmarkIcon);
        bookmarkIconView.appendChild(bookmarkTitle);
        // tslint:disable-next-line:max-line-length
        var treeObj = new TreeView({
            fields: {
                dataSource: this.bookmarks.bookMark,
                id: 'Id',
                text: 'Title',
                child: 'Child',
                hasChildren: 'HasChild',
            },
            nodeTemplate: bookmarkIconView.outerHTML,
            nodeSelected: this.nodeClick.bind(this)
        });
        treeObj.appendTo(this.bookmarkView);
    };
    /**
     * Get Bookmarks of the PDF document being loaded in the ejPdfViewer control
     * @returns any
     */
    // tslint:disable-next-line
    BookmarkView.prototype.getBookmarks = function () {
        if (this.bookmarks && this.bookmarksDestination) {
            // tslint:disable-next-line:max-line-length
            return { bookmarks: this.bookmarks, bookmarksDestination: this.bookmarksDestination };
        }
    };
    /**
     * Navigate To current Bookmark location of the PDF document being loaded in the ejPdfViewer control.
     * @returns void
     */
    BookmarkView.prototype.goToBookmark = function (pageIndex, y) {
        var proxy = this;
        var destPage = (this.pdfViewerBase.pageSize[pageIndex - 1].height);
        // tslint:disable-next-line:max-line-length
        var scrollValue = this.pdfViewerBase.pageSize[pageIndex].top * this.pdfViewerBase.getZoomFactor() + ((destPage - y) * this.pdfViewerBase.getZoomFactor());
        var scroll = scrollValue.toString();
        // tslint:disable-next-line:radix
        proxy.pdfViewerBase.viewerContainer.scrollTop = parseInt(scroll);
        proxy.pdfViewerBase.focusViewerContainer();
        return false;
    };
    /**
     * @private
     */
    BookmarkView.prototype.clear = function () {
        this.pdfViewerBase.navigationPane.disableBookmarkButton();
        this.pdfViewerBase.navigationPane.updateViewerContainerOnClose();
        if (this.bookmarks) {
            this.bookmarks.bookMark = [];
            this.bookmarks = null;
        }
        if (this.bookmarksDestination) {
            this.bookmarksDestination.bookMarkDestination = [];
        }
        if (this.bookmarkView != null) {
            while (this.bookmarkView.hasChildNodes()) {
                this.bookmarkView.removeChild(this.bookmarkView.lastChild);
            }
        }
    };
    /**
     * @private
     */
    BookmarkView.prototype.destroy = function () {
        this.clear();
    };
    /**
     * @private
     */
    BookmarkView.prototype.getModuleName = function () {
        return 'BookmarkView';
    };
    return BookmarkView;
}());
export { BookmarkView };
